{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/fullscreen/fullscreen.component.html","webpack:///./src/app/core/fullscreen/fullscreen.component.scss","webpack:///./src/app/core/fullscreen/fullscreen.component.ts","webpack:///./src/app/core/search-bar/search-bar.component.html","webpack:///./src/app/core/search-bar/search-bar.component.scss","webpack:///./src/app/core/search-bar/search-bar.component.ts","webpack:///./src/app/core/sidebar/sidebar.component.html","webpack:///./src/app/core/sidebar/sidebar.component.scss","webpack:///./src/app/core/sidebar/sidebar.component.ts","webpack:///./src/app/core/sidemenu-item/sidemenu-item.component.html","webpack:///./src/app/core/sidemenu-item/sidemenu-item.component.scss","webpack:///./src/app/core/sidemenu-item/sidemenu-item.component.ts","webpack:///./src/app/core/sidemenu/menu-element.ts","webpack:///./src/app/core/sidemenu/sidemenu.component.html","webpack:///./src/app/core/sidemenu/sidemenu.component.scss","webpack:///./src/app/core/sidemenu/sidemenu.component.ts","webpack:///./src/app/core/toolbar-notification/toolbar-notification.component.html","webpack:///./src/app/core/toolbar-notification/toolbar-notification.component.scss","webpack:///./src/app/core/toolbar-notification/toolbar-notification.component.ts","webpack:///./src/app/core/toolbar/toolbar.component.html","webpack:///./src/app/core/toolbar/toolbar.component.scss","webpack:///./src/app/core/toolbar/toolbar.component.ts","webpack:///./src/app/core/user-menu/user-menu.component.html","webpack:///./src/app/core/user-menu/user-menu.component.scss","webpack:///./src/app/core/user-menu/user-menu.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/directives/equal-validator.directive.ts","webpack:///./src/app/helpers/error.interceptor.ts","webpack:///./src/app/helpers/token.interceptor.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lazy-load/lazy-load.module.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/models/observation.model.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/no-access/no-access.component.css","webpack:///./src/app/no-access/no-access.component.html","webpack:///./src/app/no-access/no-access.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/researcher/add-fields/add-fields.component.html","webpack:///./src/app/researcher/add-fields/add-fields.component.scss","webpack:///./src/app/researcher/add-fields/add-fields.component.ts","webpack:///./src/app/researcher/add-records/add-records.component.css","webpack:///./src/app/researcher/add-records/add-records.component.html","webpack:///./src/app/researcher/add-records/add-records.component.ts","webpack:///./src/app/researcher/create-observation/create-observation.component.html","webpack:///./src/app/researcher/create-observation/create-observation.component.scss","webpack:///./src/app/researcher/create-observation/create-observation.component.ts","webpack:///./src/app/researcher/explore-observations/explore-observations.component.css","webpack:///./src/app/researcher/explore-observations/explore-observations.component.html","webpack:///./src/app/researcher/explore-observations/explore-observations.component.ts","webpack:///./src/app/researcher/list-records/list-records.component.html","webpack:///./src/app/researcher/list-records/list-records.component.scss","webpack:///./src/app/researcher/list-records/list-records.component.ts","webpack:///./src/app/researcher/list/list.component.css","webpack:///./src/app/researcher/list/list.component.html","webpack:///./src/app/researcher/list/list.component.ts","webpack:///./src/app/researcher/researcher.component.html","webpack:///./src/app/researcher/researcher.component.scss","webpack:///./src/app/researcher/researcher.component.ts","webpack:///./src/app/researcher/researcher.module.ts","webpack:///./src/app/researcher/researcher.router.ts","webpack:///./src/app/researcher/update-observation/update-observation.component.css","webpack:///./src/app/researcher/update-observation/update-observation.component.html","webpack:///./src/app/researcher/update-observation/update-observation.component.ts","webpack:///./src/app/resolvers/record.resolver.ts","webpack:///./src/app/services/_base.datasource.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth-services.service.ts","webpack:///./src/app/services/google-app-service.service.ts","webpack:///./src/app/services/observation.datasource.ts","webpack:///./src/app/services/observation.service.ts","webpack:///./src/app/services/record.datasource.ts","webpack:///./src/app/services/record.service.ts","webpack:///./src/app/shared/customErrorStateMatcher.ts","webpack:///./src/app/shared/validators/confirm-password.validator.ts","webpack:///./src/app/sign-in/sign-in.component.css","webpack:///./src/app/sign-in/sign-in.component.html","webpack:///./src/app/sign-in/sign-in.component.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/app/wildcard-routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"../researcher/researcher.module\": [\n\t\t\"./src/app/researcher/researcher.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, RouterStateSnapshot } from '@angular/router';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'signin', pathMatch: 'full'},\r\n  { path:'signin', component: SignInComponent },\r\n  { path: 'signup', component: SignUpComponent},\r\n  // { path: 'dashboard', redirectTo:'researcher', pathMatch: 'full'},\r\n  // { path: 'researcher', component: ResearcherComponent},\r\n  // { path: 'navtest', component: NavtestComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-home></app-home>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Citizen';\n}\n","\r\n// Application core imports\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\n// Component Imports\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { NoAccessComponent } from './no-access/no-access.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\n\r\n// Module Imports\r\nimport { MaterialModule } from './material/material.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AuthGuard } from './services/auth-guard.service';\r\nimport { AuthServices } from './services/auth-services.service';\r\n// import { ResearcherComponent } from './researcher/researcher.component';\r\nimport { MatGridListModule, \r\n  MatCardModule, \r\n  MatMenuModule, \r\n  MatIconModule, \r\n  MatButtonModule, \r\n  MatToolbarModule, \r\n  MatSidenavModule, \r\n  MatListModule, \r\n  MatSnackBarModule \r\n} from '@angular/material';\r\n\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { ResearcherComponent } from './researcher/researcher.component';\r\nimport { LazyLoadModule } from './lazy-load/lazy-load.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { EqualValidator } from './directives/equal-validator.directive';\r\nimport { AppErrorHandler } from './shared/AppErrorHandlers/app-error-handler';\r\nimport { WildCardRoutingModule } from './wildcard-routing.module';\r\n\r\n// Interceptors\r\nimport { TokenInterceptor } from './helpers/token.interceptor';\r\nimport { ErrorInterceptor } from './helpers/error.interceptor';\r\nimport { DataTable } from 'primeng/primeng'\r\nimport { RecordResolver } from './resolvers/record.resolver';\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignInComponent,\r\n    SignUpComponent,\r\n    NoAccessComponent,\r\n    HomeComponent,\r\n    NavBarComponent,\r\n    DashboardComponent,\r\n    EqualValidator\r\n    //ResearcherComponent\r\n    // ResearcherComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    LazyLoadModule,\r\n    AppRoutingModule,\r\n    WildCardRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    LayoutModule,\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AuthServices,\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SidemenuComponent } from './sidemenu/sidemenu.component';\r\nimport { SidemenuItemComponent } from './sidemenu-item/sidemenu-item.component';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTabsModule } from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PerfectScrollbarModule, PerfectScrollbarConfigInterface,\r\n    PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ToolbarNotificationComponent } from './toolbar-notification/toolbar-notification.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { SearchBarComponent } from './search-bar/search-bar.component';\r\nimport { FullscreenComponent } from './fullscreen/fullscreen.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { UserMenuComponent } from './user-menu/user-menu.component';\r\nimport {\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatProgressBarModule,\r\n} from '@angular/material';\r\n\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n    suppressScrollX: true,\r\n    wheelPropagation: true\r\n};\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        SidemenuComponent,\r\n        SidemenuItemComponent,\r\n        ToolbarNotificationComponent,\r\n        ToolbarComponent,\r\n        SearchBarComponent,\r\n        FullscreenComponent,\r\n        SidebarComponent,\r\n        UserMenuComponent\r\n    ],\r\n\r\n    imports: [\r\n        CommonModule,\r\n        MatListModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatChipsModule,\r\n        RouterModule,\r\n        PerfectScrollbarModule,\r\n        FlexLayoutModule,\r\n        MatToolbarModule,\r\n        MatFormFieldModule,\r\n        MatSidenavModule,\r\n        MatTabsModule,\r\n        MatSliderModule,\r\n        MatProgressBarModule,\r\n    ],\r\n\r\n\r\n    exports: [\r\n        SidemenuComponent,\r\n        SidemenuItemComponent,\r\n        ToolbarNotificationComponent,\r\n        ToolbarComponent,\r\n        SearchBarComponent,\r\n        FullscreenComponent,\r\n        SidebarComponent,\r\n        UserMenuComponent\r\n    ],\r\n\r\n    providers: [\r\n        {\r\n            provide: PERFECT_SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        }\r\n    ]\r\n})\r\nexport class CoreModule { }\r\n","module.exports = \"<button mat-icon-button [fxHide]=\\\"true\\\" [fxHide.gt-xs]=\\\"false\\\" (click)=\\\"toggleFullscreen()\\\">\\n    <mat-icon *ngIf=\\\"!isFullscreen\\\">fullscreen</mat-icon>\\n    <mat-icon *ngIf=\\\"isFullscreen\\\">fullscreen_exit</mat-icon>\\n</button>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZnVsbHNjcmVlbi9mdWxsc2NyZWVuLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n//import * as screenfull from 'screenfull';\n\n@Component({\n  selector: 'cdk-fullscreen',\n  templateUrl: './fullscreen.component.html',\n  styleUrls: ['./fullscreen.component.scss']\n})\nexport class FullscreenComponent implements OnInit {\n\tisFullscreen: boolean = false;\n  \tconstructor() { }\n\n  \tngOnInit() {\n  \t}\n\n  \t// toggleFullscreen() {\n\t//     if (screenfull.enabled) {\n\t//       \tscreenfull.toggle();\n\t//       \tthis.isFullscreen = !this.isFullscreen;\n\t//     }\n  \t// }\n\n}\n","module.exports = \"<mat-form-field class=\\\"search\\\"  [ngClass]=\\\"{'search-open': open == true}\\\"> \\n  <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" (focus)=\\\"bigMenu = true\\\" (focusout)=\\\"bigMenu = false\\\">\\n</mat-form-field>\"","module.exports = \".search {\\n  width: 0;\\n  overflow: hidden;\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: all 0.4s cubic-bezier(0.35, 0, 0.25, 1);\\n  margin-top: 7px; }\\n\\n.search.search-open {\\n  width: 250px;\\n  visibility: visible;\\n  opacity: 1;\\n  margin-top: 11px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9zZWFyY2gtYmFyL0M6XFxVc2Vyc1xcTWluaGF6XFxEb2N1bWVudHNcXGFuZ3VsYXJUZXN0c1xcY2l0aXplbi1mcm9udC9zcmNcXGFwcFxcY29yZVxcc2VhcmNoLWJhclxcc2VhcmNoLWJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLFNBQVE7RUFDUixpQkFBZ0I7RUFDaEIsV0FBVTtFQUNWLG1CQUFrQjtFQUNsQixvREFBNkM7RUFDN0MsZ0JBQWUsRUFDZjs7QUFFRDtFQUNDLGFBQVk7RUFDWixvQkFBbUI7RUFDbkIsV0FBVTtFQUNWLGlCQUFnQixFQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvc2VhcmNoLWJhci9zZWFyY2gtYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlYXJjaCB7XG5cdHdpZHRoOiAwO1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHRvcGFjaXR5OiAwO1xuXHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdHRyYW5zaXRpb246IGFsbCAuNHMgY3ViaWMtYmV6aWVyKC4zNSwwLC4yNSwxKTtcblx0bWFyZ2luLXRvcDogN3B4O1xufVxuXG4uc2VhcmNoLnNlYXJjaC1vcGVuIHtcblx0d2lkdGg6IDI1MHB4O1xuXHR2aXNpYmlsaXR5OiB2aXNpYmxlO1xuXHRvcGFjaXR5OiAxO1xuXHRtYXJnaW4tdG9wOiAxMXB4O1xufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'cdk-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss']\n})\nexport class SearchBarComponent implements OnInit {\n\tpublic bigMenu;\n\t@Input() open;\n\tconstructor() { }\n\n\tngOnInit() {}\n\n}\n","module.exports = \"<mat-tab-group>\\n    <mat-tab label=\\\"Overview\\\">\\n\\n        <div class=\\\"sidebar\\\">\\n\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"padding: 30px 0; background: url('./assets/images/bg/city1.jpg');\\\">\\n                <div style=\\\"width: 100%; height: 22%; position: absolute;background: #17161642;z-index: 1\\\"></div>\\n                <div class=\\\"mat-display-2\\\" style=\\\"margin: 0; color: white;z-index: 2\\\">{{today | date:'shortTime'}}</div>\\n                <div class=\\\"mat-subheading-2\\\" style=\\\"margin: 0;color: white;z-index: 2\\\">{{today | date:'EEEE'}}, {{today | date:'MMMM'}} {{today | date:'dd'}}\\n                </div>\\n            </div>\\n\\n\\n            <mat-divider></mat-divider>\\n\\n            <h3 class=\\\"mat-subheading-2\\\" style=\\\"margin: 10px 14px 0;\\\">Upcoming Events</h3>\\n            <mat-nav-list>\\n                <div *ngFor=\\\"let event of events;\\\">\\n                    <mat-list-item>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-ripple>\\n                            <div fxLayout=\\\"column\\\">\\n                                <div class=\\\"mat-ubheading-2\\\" style=\\\"margin: 0; font-weight: bold;\\\">{{ event.title }}</div>\\n                                <div style=\\\"font-size: 12px;\\\">{{ event.time }}</div>\\n                            </div>\\n                        </div>\\n                    </mat-list-item>\\n                </div>\\n            </mat-nav-list>\\n\\n\\n\\n            <mat-divider></mat-divider>\\n\\n            <mat-nav-list>\\n                <h3 class=\\\"mat-subheading-2\\\" style=\\\"margin: 10px 14px 0;\\\">Todo-List</h3>\\n                <div *ngFor=\\\"let todolist of todolists;\\\">\\n                    <mat-list-item>\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-ripple>\\n                            <div class=\\\"title\\\" fxLayout=\\\"column\\\">\\n                                <div class=\\\"mat-ubheading-2\\\" style=\\\"margin: 0; font-weight: bold;\\\">{{ todolist.title }}</div>\\n                                <div style=\\\"font-size: 12px;\\\">{{ todolist.time }}</div>\\n                            </div>\\n                        </div>\\n                    </mat-list-item>\\n                </div>\\n            </mat-nav-list>\\n\\n            <mat-divider></mat-divider>\\n\\n\\n        </div>\\n    </mat-tab>\\n\\n    <mat-tab label=\\\"Notifications\\\">\\n        <div class=\\\"sidebar\\\">\\n            <div>\\n                <h3 style=\\\"margin: 10px 14px 0;\\\">Friends</h3>\\n\\n                <mat-list>\\n                    <mat-list-item *ngFor=\\\"let message of messages\\\">\\n                        <img matListAvatar src=\\\"assets/images/avatars/friend1.jpeg\\\" alt=\\\"...\\\">\\n                        <h3 matLine style=\\\"margin: 0; font-weight: bold;\\\"> {{message.from}} </h3>\\n                        <p matLine>\\n                            <span> {{message.subject}} </span>\\n                            <span> -- {{message.content}} </span>\\n                        </p>\\n                    </mat-list-item>\\n                </mat-list>\\n\\n            </div>\\n        </div>\\n\\n    </mat-tab>\\n</mat-tab-group>\\n\\n<mat-divider></mat-divider>\\n\\n<mat-nav-list>\\n    <div>\\n        <h3 class=\\\"mat-subheading-2\\\" style=\\\"margin: 10px 14px 0;\\\">Server Statistics</h3>\\n        <div>\\n            <mat-list-item>\\n                <h5>CPU Load</h5>\\n                <mat-progress-bar [color]=\\\"'accent'\\\" [mode]=\\\"'buffer'\\\" [value]=\\\"'70'\\\" [bufferValue]=\\\"100\\\">></mat-progress-bar>\\n            </mat-list-item>\\n        </div>\\n\\n\\n        <div>\\n            <mat-list-item>\\n                <h5>RAM Usage</h5>\\n                <mat-progress-bar [color]=\\\"'primary'\\\" [mode]=\\\"'buffer'\\\" [value]=\\\"'47'\\\" [bufferValue]=\\\"100\\\"></mat-progress-bar>\\n            </mat-list-item>\\n        </div>\\n\\n\\n        <div>\\n            <mat-list-item>\\n                <h5>CPU Temp</h5>\\n                <mat-progress-bar [color]=\\\"'warn'\\\" [mode]=\\\"'buffer'\\\" [value]=\\\"'43'\\\" [bufferValue]=\\\"100\\\"></mat-progress-bar>\\n            </mat-list-item>\\n        </div>\\n\\n    </div>\\n</mat-nav-list>\"","module.exports = \".content {\\n  margin-top: 2px; }\\n\\n.example-margin {\\n  margin: 0 10px; }\\n\\n.today {\\n  width: 100%;\\n  height: 22%;\\n  position: absolute;\\n  background: '#17161642';\\n  z-index: 1; }\\n\\n.today-bg {\\n  padding: 30px 0; }\\n\\n.today-time {\\n  margin: 0;\\n  color: white;\\n  z-index: 2; }\\n\\n.today-date {\\n  margin: 0;\\n  color: white;\\n  z-index: 2; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9zaWRlYmFyL0M6XFxVc2Vyc1xcTWluaGF6XFxEb2N1bWVudHNcXGFuZ3VsYXJUZXN0c1xcY2l0aXplbi1mcm9udC9zcmNcXGFwcFxcY29yZVxcc2lkZWJhclxcc2lkZWJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNDLGdCQUFlLEVBRWY7O0FBQ0Q7RUFDRSxlQUFjLEVBQ2Y7O0FBQ0Q7RUFDQyxZQUFXO0VBQ1gsWUFBVztFQUNYLG1CQUFrQjtFQUNsQix3QkFBdUI7RUFDdkIsV0FBVSxFQUNWOztBQUNEO0VBQ0MsZ0JBQWUsRUFFZjs7QUFDRDtFQUNDLFVBQVM7RUFDVCxhQUFZO0VBQ1osV0FBVSxFQUNWOztBQUNEO0VBQ0MsVUFBUztFQUNULGFBQVk7RUFDWixXQUFVLEVBQ1YiLCJmaWxlIjoic3JjL2FwcC9jb3JlL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlYmFye1xuICB9XG4uY29udGVudHtcblx0bWFyZ2luLXRvcDogMnB4O1xuXG59XG4uZXhhbXBsZS1tYXJnaW4ge1xuICBtYXJnaW46IDAgMTBweDtcbn1cbi50b2RheXtcblx0d2lkdGg6IDEwMCU7XG5cdGhlaWdodDogMjIlO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdGJhY2tncm91bmQ6ICcjMTcxNjE2NDInO1xuXHR6LWluZGV4OiAxO1xufVxuLnRvZGF5LWJne1xuXHRwYWRkaW5nOiAzMHB4IDA7XG5cdC8vYmFja2dyb3VuZDogdXJsKCcuLi8uLi8uLi9hc3NldHMvaW1hZ2VzL2JnL2NpdHkxLmpwZycpO1xufVxuLnRvZGF5LXRpbWV7XG5cdG1hcmdpbjogMDtcblx0Y29sb3I6IHdoaXRlO1xuXHR6LWluZGV4OiAyO1xufVxuLnRvZGF5LWRhdGV7XG5cdG1hcmdpbjogMDtcblx0Y29sb3I6IHdoaXRlO1xuXHR6LWluZGV4OiAyO1xufVxuXG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'cdk-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  today: number = Date.now();\n  // public bufferValue;\n\n    events = [\n          {\n            id: 'id',\n            title: 'Business Meeting',\n            time: '05:00 PM',\n            state: 'state'\n        },\n        {\n            id: 'id',\n            title: 'Ask for a Vacation',\n            time: '05:00 PM',\n            state: 'state'\n        },\n        {\n            id: 'id',\n            title: 'Dinner with Micheal',\n            time: '05:00 PM',\n            state: 'state'\n        },\n        {\n            id: 'id',\n            title: 'Deadline for Project ABC',\n            time: '05:00 PM',\n            state: 'state'\n        },\n    ];\n\n    todolists = [\n          {\n            id: 'id',\n            title: 'Get to know Angular more',\n            time: 'Added:4 days ago',\n        },\n        {\n            id: 'id',\n            title: 'Configure new Router',\n            time: 'Added:4 days ago',\n        },\n        {\n            id: 'id',\n            title: 'Invite Joy to play Carroms',\n            time: 'Added:4 days ago',\n        },\n        {\n            id: 'id',\n            title: 'Check SRS of Project X',\n            time: 'Added:4 days ago',\n        },\n    ];\n\n    messages = [\n        {from: 'Catherin', subject: 'Shopping', content: 'hi there??'},\n        {from: 'Jack', subject: 'Function', content: 'yes'},\n        {from: 'Karina', subject: 'Get together', content: 'nice'},\n        {from: 'Micheal', subject: 'Trip', content: 'ya.. I will'},\n        {from: 'Ashik', subject: 'Meeting', content: 'Time??'},\n        {from: 'Joy', subject: 'Party', content: 'Lets enjoy'},\n    ];\n}\n","module.exports = \"<mat-nav-list [style.maxHeight]=\\\"(menu.open)?'1200px':'48px'\\\"  [ngClass]=\\\"{'secondaryMenu': secondaryMenu, 'primary': !secondaryMenu}\\\">\\n    <mat-list-item *ngIf = \\\"menu.link==false\\\" (click)=\\\"menu.open = !menu.open\\\" >\\n        <mat-icon matListIcon iconsmall  >{{menu.icon}} </mat-icon>\\n        <h3 matLine *ngIf=\\\"!iconOnly\\\">{{ menu.name }} </h3>\\n        <mat-chip-list *ngIf=\\\"menu?.chip && !iconOnly\\\">\\n            <mat-chip >{{menu?.chip?.value}} </mat-chip>\\n        </mat-chip-list>        \\n        <mat-icon *ngIf=\\\"chechForChildMenu()\\\" class=\\\"sidenav-dropdown-indicator rotate \\\" [ngClass]=\\\"{'indicateOpen':menu.open}\\\"> expand_more</mat-icon>\\n    </mat-list-item>\\n\\n    <mat-list-item *ngIf = \\\"menu.link!=false\\\" (click)=\\\"menu.open = !menu.open\\\" [routerLink]=\\\"[menu.link]\\\">\\n    \\t<mat-icon matListIcon iconsmall  >{{menu.icon}} </mat-icon>\\n        <h3 matLine *ngIf=\\\"!iconOnly\\\">{{ menu.name }} </h3>\\n    </mat-list-item>\\n\\n    <cdk-sidemenu-item *ngFor=\\\"let submenu of menu?.sub\\\" [menu]=\\\"submenu\\\" [iconOnly]=\\\"iconOnly\\\" [secondaryMenu]=\\\"true\\\"> </cdk-sidemenu-item>\\n\\n</mat-nav-list>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvc2lkZW1lbnUtaXRlbS9zaWRlbWVudS1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'cdk-sidemenu-item',\n    templateUrl: './sidemenu-item.component.html',\n    styleUrls: ['./sidemenu-item.component.scss']\n})\nexport class SidemenuItemComponent implements OnInit {\n\n    @Input() menu;\n    @Input() iconOnly: boolean;\n    @Input() secondaryMenu = false;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    openLink() {\n        this.menu.open = this.menu.open;\n    }\n\n    chechForChildMenu() {\n        return (this.menu && this.menu.sub) ? true : false;\n    }\n\n}\n","export const menus = [\r\n\r\n    {\r\n        'name': 'Observations',\r\n        'icon': 'list',\r\n        'link': false,\r\n        'open': true,\r\n        'sub': [\r\n            {\r\n                'name': 'Dashboard',\r\n                'icon': 'dashboard',\r\n                'link': '/citizenpanel',\r\n                'open': false,\r\n            },\r\n            {\r\n                'name': 'Create Observation',\r\n                'icon': 'add_circle_outline',\r\n                'link': 'createobservation',\r\n                'open': false,\r\n            },\r\n            {\r\n                'name': 'My List',\r\n                'icon': 'format_list_bulleted',\r\n                'link': 'list',\r\n                'open': false,\r\n            },\r\n            {\r\n                'name': 'Explore Observations',\r\n                'icon': 'explore',\r\n                'link': 'explore',\r\n                'open': false,\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n\r\n        'name': 'Graphs',\r\n        'icon': 'pie_chart_outlined',\r\n        'open': false,\r\n        'link': false,\r\n        'sub': [\r\n            {\r\n                'name': 'Create Graph',\r\n                'icon': 'add_circle_outline',\r\n                'link': 'graph/create',\r\n                'open': false,\r\n\r\n            },\r\n            {\r\n                'name': 'My Graphs',\r\n                'icon': 'show_chart',\r\n                'open': false,\r\n                'link': 'graphs/list',\r\n            },\r\n            {\r\n                'name': 'Explore Graphs',\r\n                'icon': 'explore',\r\n                'open': false,\r\n                'link': 'graphs/explore',\r\n            }\r\n        ]\r\n    }\r\n];\r\n","module.exports = \"\\r\\n<perfect-scrollbar style=\\\"height: 78%\\\" [config] = \\\"config\\\">\\r\\n    <div fxLayout=\\\"column\\\" >\\r\\n        <!-- <div *ngIf=\\\"!iconOnly\\\" fxLayoutAlign=\\\"space-around center\\\" [style.margin]=\\\"'10px 0px'\\\" >\\r\\n          <img width=\\\"100\\\" [style.borderRadius]=\\\"'50%'\\\" src=\\\"./assets/user-image.jpg\\\">\\r\\n        </div>\\r\\n        <div *ngIf=\\\"iconOnly\\\" style=\\\"height: 100px;\\\" fxLayoutAlign=\\\"space-around center\\\"  >\\r\\n            <img width=\\\"50\\\" [style.borderRadius]=\\\"'50%'\\\" src=\\\"./assets/user-image.jpg\\\">\\r\\n        </div> -->\\r\\n        <cdk-sidemenu-item *ngFor=\\\"let menu of menus\\\" [menu]=\\\"menu\\\" [iconOnly]=\\\"iconOnly\\\"> </cdk-sidemenu-item>\\r\\n    </div>\\r\\n    \\r\\n</perfect-scrollbar>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvc2lkZW1lbnUvc2lkZW1lbnUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { menus } from './menu-element';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\n\r\n\r\n@Component({\r\n  selector: 'cdk-sidemenu',\r\n  templateUrl: './sidemenu.component.html',\r\n  styleUrls: ['./sidemenu.component.scss']\r\n})\r\nexport class SidemenuComponent implements OnInit {\r\n\r\n    @Input() iconOnly:boolean = false;\r\n    public config: PerfectScrollbarConfigInterface = {};\r\n    public menus = menus;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"toolbar-notification-container\\\">\\n\\t<button mat-icon-button (click)=\\\"isOpen = !isOpen;\\\" [ngClass]=\\\"[cssPrefix+'-btn']\\\" [class.open]=\\\"isOpen\\\">\\n    \\t<mat-icon>notifications_none</mat-icon>\\n    \\t<span class=\\\"badge\\\" *ngIf=\\\"notifications && notifications?.length !== 0\\\">{{ notifications?.length }}</span>\\n  </button>\\n\\n\\n\\t<div class=\\\"dropdown mat-elevation-z4\\\" [class.open]=\\\"isOpen\\\">\\n\\n\\t<div class=\\\"card\\\">\\n      \\t<div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        \\t<div class=\\\"title\\\">\\n         \\t\\t <div class=\\\"name\\\">Notifications</div>\\n          \\t\\t<div class=\\\"extra\\\">\\nYou have {{ notifications?.length }} new notifications</div>\\n        \\t</div>\\n        \\t<button type=\\\"button\\\" mat-icon-button>\\n          \\t\\t<mat-icon class=\\\"icon\\\">settings</mat-icon>\\n        \\t</button>\\n      \\t</div>\\n      \\t<div *ngIf=\\\"notifications?.length !== 0; then thenBlock else elseBlock;\\\"></div>\\n      \\t<div class=\\\"footer\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        \\t<div class=\\\"action\\\">Mark all as read</div>\\n    \\t</div>\\n    </div>\\n\\n\\t</div>\\n\\n</div>\\n\\n<ng-template #thenBlock>\\n  <perfect-scrollbar class=\\\"content\\\">\\n    <div *ngFor=\\\"let notification of notifications; last as isLast\\\">\\n      <div class=\\\"notification\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-ripple>\\n        <mat-icon class=\\\"icon\\\">notifications</mat-icon>\\n        <div class=\\\"title\\\" fxLayout=\\\"column\\\">\\n          <div class=\\\"name\\\">{{ notification.title }}</div>\\n          <div class=\\\"time\\\">{{ notification.lastTime }}</div>\\n        </div>\\n        <span fxFlex></span>\\n        <button type=\\\"button\\\" mat-icon-button (click)=\\\"delete(notification)\\\">\\n          <mat-icon class=\\\"close\\\">close</mat-icon>\\n        </button>\\n      </div>\\n      <div class=\\\"divider\\\" *ngIf=\\\"!isLast\\\"></div>\\n    </div>\\n  </perfect-scrollbar>\\n</ng-template>\\n\\n<ng-template #elseBlock>\\n  <div class=\\\"no\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">暂无通知</div>\\n</ng-template>\\n\\n\"","module.exports = \".badge {\\n  position: absolute;\\n  top: 0;\\n  left: 50%;\\n  font-weight: 700;\\n  line-height: 13px;\\n  height: 13px;\\n  padding: 5px;\\n  border-radius: 26%;\\n  width: 30%;\\n  background-color: #f44336;\\n  color: #fff;\\n  border-color: #f44336; }\\n\\n.toolbar-notification-container {\\n  position: relative;\\n  display: flex;\\n  align-items: center; }\\n\\n.toolbar-notification-btn {\\n  display: flex;\\n  justify-content: center;\\n  margin-right: 10px; }\\n\\n.dropdown {\\n  background: white;\\n  position: absolute;\\n  top: 42px;\\n  right: 28px;\\n  min-width: 350px;\\n  z-index: 2;\\n  -webkit-transform: translateY(0) scale(0);\\n          transform: translateY(0) scale(0);\\n  -webkit-transform-origin: top right;\\n          transform-origin: top right;\\n  visibility: hidden;\\n  transition: visibility 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), -webkit-transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\\n  transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), visibility 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\\n  transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), visibility 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), -webkit-transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1); }\\n\\n@media screen and (max-width: 599px) {\\n    .dropdown {\\n      min-width: 50vw;\\n      right: 5px;\\n      -webkit-transform: translateY(0);\\n              transform: translateY(0);\\n      visibility: hidden;\\n      transition: visibility 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), -webkit-transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\\n      transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), visibility 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\\n      transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), visibility 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), -webkit-transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1); } }\\n\\n.dropdown.open {\\n    -webkit-transform: translateY(0) scale(1);\\n            transform: translateY(0) scale(1);\\n    visibility: visible; }\\n\\n.dropdown .card .header {\\n    background: #EEEEEE;\\n    min-height: 54px;\\n    padding-left: 16px;\\n    padding-right: 8px;\\n    color: #555;\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center;\\n    align-content: center;\\n    border-bottom: 1px solid #e0e0e0; }\\n\\n.dropdown .card .header .extra {\\n      font-size: 12px;\\n      color: #888; }\\n\\n.dropdown .content {\\n    overflow: hidden;\\n    max-height: 256px; }\\n\\n.dropdown .content .notification {\\n      min-height: 64px;\\n      padding: 0 16px 0 14px;\\n      position: relative;\\n      color: #666;\\n      cursor: pointer; }\\n\\n.dropdown .content .notification .icon {\\n        height: 28px;\\n        width: 28px;\\n        line-height: 28px;\\n        font-size: 18px;\\n        margin-right: 13px;\\n        text-align: center;\\n        border-radius: 50%;\\n        background: #FFF;\\n        color: #888;\\n        border: 1px solid #EEE; }\\n\\n.dropdown .content .notification .title {\\n        font-weight: 500;\\n        font-size: 14px; }\\n\\n.dropdown .content .notification .time {\\n        font-size: 12px; }\\n\\n.dropdown .content .notification .close {\\n        font-size: 18px;\\n        width: 18px;\\n        height: 18px;\\n        line-height: 18px; }\\n\\n.dropdown .content .notification.primary .icon {\\n        background: #ccc;\\n        color: #ddd; }\\n\\n.dropdown .content .notification.accent .icon {\\n        background: #aaa;\\n        color: #bbb; }\\n\\n.dropdown .content .notification.warn .icon {\\n        background: #eee;\\n        color: #ddd; }\\n\\n.dropdown .content .notification.read {\\n        color: #999; }\\n\\n.dropdown .content .notification.read .name {\\n          font-weight: normal; }\\n\\n.dropdown .footer {\\n    min-height: 42px;\\n    border-top: 1px solid #EEE; }\\n\\n.dropdown .footer .action {\\n      cursor: pointer;\\n      color: #AAA;\\n      text-align: center;\\n      font-size: 13px; }\\n\\n.dropdown .divider {\\n    width: calc(100% - 30px);\\n    height: 1px;\\n    background: #EEE;\\n    margin: 0 16px 0 14px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS90b29sYmFyLW5vdGlmaWNhdGlvbi9DOlxcVXNlcnNcXE1pbmhhelxcRG9jdW1lbnRzXFxhbmd1bGFyVGVzdHNcXGNpdGl6ZW4tZnJvbnQvc3JjXFxhcHBcXGNvcmVcXHRvb2xiYXItbm90aWZpY2F0aW9uXFx0b29sYmFyLW5vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNHLG1CQUFrQjtFQUNsQixPQUFNO0VBQ04sVUFBUztFQUNULGlCQUFnQjtFQUNoQixrQkFBaUI7RUFDakIsYUFBWTtFQUNaLGFBQVk7RUFDWCxtQkFBa0I7RUFDbEIsV0FBVTtFQUNWLDBCQUF5QjtFQUMxQixZQUFXO0VBQ1gsc0JBQ0gsRUFBQzs7QUFHQztFQUNFLG1CQUFrQjtFQUNsQixjQUFhO0VBQ2Isb0JBQW1CLEVBQ3BCOztBQUVEO0VBQ0UsY0FBYTtFQUNiLHdCQUF1QjtFQUN2QixtQkFBa0IsRUFDbkI7O0FBRUg7RUFDQyxrQkFBaUI7RUFDakIsbUJBQWtCO0VBQ2xCLFVBQVM7RUFDVCxZQUFXO0VBQ1gsaUJBQWdCO0VBQ2hCLFdBQVU7RUFDViwwQ0FBaUM7VUFBakMsa0NBQWlDO0VBQ2pDLG9DQUEyQjtVQUEzQiw0QkFBMkI7RUFDM0IsbUJBQWtCO0VBQ2xCLHNIQUFxRztFQUFyRyw4R0FBcUc7RUFBckcsdUtBQXFHLEVBMkhyRzs7QUF6SEE7SUFaRDtNQWFLLGdCQUFlO01BQ2YsV0FBVTtNQUNWLGlDQUF3QjtjQUF4Qix5QkFBd0I7TUFDeEIsbUJBQWtCO01BQ2xCLHNIQUErRjtNQUEvRiw4R0FBK0Y7TUFBL0YsdUtBQStGLEVBb0huRyxFQUFBOztBQXJJRDtJQXFCSywwQ0FBaUM7WUFBakMsa0NBQWlDO0lBQ2pDLG9CQUFtQixFQUN0Qjs7QUF2QkY7SUEyQk8sb0JBQW1CO0lBQ25CLGlCQUFnQjtJQUNoQixtQkFBa0I7SUFDbEIsbUJBQWtCO0lBQ2xCLFlBQVc7SUFDWCxjQUFhO0lBQ2IsNEJBQTJCO0lBQzNCLG9CQUFtQjtJQUNuQixzQkFBcUI7SUFDckIsaUNBQWdDLEVBTWpDOztBQTFDTjtNQXVDUyxnQkFBZTtNQUNmLFlBQVcsRUFDWjs7QUF6Q1I7SUE2Q08saUJBQWdCO0lBQ2hCLGtCQUFpQixFQW1FbkI7O0FBakhMO01BaURTLGlCQUFnQjtNQUNoQix1QkFBc0I7TUFDdEIsbUJBQWtCO01BQ2xCLFlBQVc7TUFDWCxnQkFBZSxFQTJEaEI7O0FBaEhSO1FBd0RVLGFBQVk7UUFDWixZQUFXO1FBQ1gsa0JBQWlCO1FBQ2pCLGdCQUFlO1FBQ2YsbUJBQWtCO1FBQ2xCLG1CQUFrQjtRQUNsQixtQkFBa0I7UUFDbEIsaUJBQWdCO1FBQ2hCLFlBQVc7UUFDWCx1QkFBc0IsRUFDdEI7O0FBbEVWO1FBcUVZLGlCQUFnQjtRQUNoQixnQkFBZSxFQUNqQjs7QUF2RVY7UUEwRVcsZ0JBQWUsRUFDaEI7O0FBM0VWO1FBOEVZLGdCQUFlO1FBQ2YsWUFBVztRQUNaLGFBQVk7UUFDWixrQkFBaUIsRUFDbEI7O0FBbEZWO1FBc0ZhLGlCQUFnQjtRQUNoQixZQUFXLEVBQ1o7O0FBeEZaO1FBNkZhLGlCQUFnQjtRQUNoQixZQUFXLEVBQ1o7O0FBL0ZaO1FBb0dhLGlCQUFnQjtRQUNoQixZQUFXLEVBQ1o7O0FBdEdaO1FBMEdXLFlBQVcsRUFLWjs7QUEvR1Y7VUE2R2Esb0JBQW1CLEVBQ3BCOztBQTlHWjtJQW9ITyxpQkFBZ0I7SUFDaEIsMkJBQTBCLEVBUTVCOztBQTdITDtNQXdIUyxnQkFBZTtNQUNmLFlBQVc7TUFDWCxtQkFBa0I7TUFDbEIsZ0JBQWUsRUFDbEI7O0FBNUhOO0lBZ0lPLHlCQUF3QjtJQUN4QixZQUFXO0lBQ1gsaUJBQWdCO0lBQ2hCLHNCQUFxQixFQUN2QiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvdG9vbGJhci1ub3RpZmljYXRpb24vdG9vbGJhci1ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkcHJlZml4OiAndG9vbGJhci1ub3RpZmljYXRpb24nO1xuXG4uYmFkZ2Uge1xuICBcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgXHR0b3A6IDA7XG4gIFx0bGVmdDogNTAlO1xuICBcdGZvbnQtd2VpZ2h0OiA3MDA7XG4gIFx0bGluZS1oZWlnaHQ6IDEzcHg7XG4gIFx0aGVpZ2h0OiAxM3B4O1xuICBcdHBhZGRpbmc6IDVweDtcbiAgICBib3JkZXItcmFkaXVzOiAyNiU7XG4gICAgd2lkdGg6IDMwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2O1xuICBcdGNvbG9yOiAjZmZmO1xuICBcdGJvcmRlci1jb2xvcjojZjQ0MzM2XG59XG5cbi4jeyRwcmVmaXh9IHtcbiAgJi1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cblxuICAmLWJ0biB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIH1cbn1cbi5kcm9wZG93biB7XG5cdGJhY2tncm91bmQ6IHdoaXRlO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogNDJweDtcblx0cmlnaHQ6IDI4cHg7XG5cdG1pbi13aWR0aDogMzUwcHg7XG5cdHotaW5kZXg6IDI7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSBzY2FsZSgwKTtcblx0dHJhbnNmb3JtLW9yaWdpbjogdG9wIHJpZ2h0O1xuXHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNHMgY3ViaWMtYmV6aWVyKC4yNSwgLjgsIC4yNSwgMSksIHZpc2liaWxpdHkgLjRzIGN1YmljLWJlemllciguMjUsIC44LCAuMjUsIDEpO1xuXG5cdEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU5OXB4KSB7XG5cdCAgICBtaW4td2lkdGg6IDUwdnc7XG5cdCAgICByaWdodDogNXB4O1xuXHQgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIFx0dmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIC40cyBjdWJpYy1iZXppZXIoLjI1LC44LC4yNSwxKSwgdmlzaWJpbGl0eSAuNHMgY3ViaWMtYmV6aWVyKC4yNSwuOCwuMjUsMSk7XG5cdH1cblxuXHQmLm9wZW4ge1xuXHQgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEpO1xuXHQgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcblx0fVxuXHQuY2FyZCB7XG5cblx0ICAgIC5oZWFkZXIge1xuXHQgICAgICBiYWNrZ3JvdW5kOiAjRUVFRUVFO1xuXHQgICAgICBtaW4taGVpZ2h0OiA1NHB4O1xuXHQgICAgICBwYWRkaW5nLWxlZnQ6IDE2cHg7XG5cdCAgICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcblx0ICAgICAgY29sb3I6ICM1NTU7XG5cdCAgICAgIGRpc3BsYXk6IGZsZXg7XG5cdCAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcblx0ICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblx0ICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuXHQgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UwZTBlMDtcblxuXHQgICAgICAuZXh0cmEge1xuXHQgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcblx0ICAgICAgICBjb2xvcjogIzg4ODtcblx0ICAgICAgfVxuICAgIFx0fVxuICAgIH1cbiAgICAuY29udGVudCB7XG4gICAgICBcdG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBcdG1heC1oZWlnaHQ6IDI1NnB4O1xuXG4gICAgICBcdC5ub3RpZmljYXRpb24ge1xuICAgICAgICBcdG1pbi1oZWlnaHQ6IDY0cHg7XG5cdCAgICAgICAgcGFkZGluZzogMCAxNnB4IDAgMTRweDtcblx0ICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cdCAgICAgICAgY29sb3I6ICM2NjY7XG5cdCAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG5cdCAgICAgICAgLmljb24ge1xuXHRcdCAgICAgICAgaGVpZ2h0OiAyOHB4O1xuXHRcdCAgICAgICAgd2lkdGg6IDI4cHg7XG5cdFx0ICAgICAgICBsaW5lLWhlaWdodDogMjhweDtcblx0XHQgICAgICAgIGZvbnQtc2l6ZTogMThweDtcblx0XHQgICAgICAgIG1hcmdpbi1yaWdodDogMTNweDtcblx0XHQgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHQgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcblx0XHQgICAgICAgIGJhY2tncm91bmQ6ICNGRkY7XG5cdFx0ICAgICAgICBjb2xvcjogIzg4ODtcblx0XHQgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNFRUU7XG4gICAgICAgIFx0fVxuXG4gICAgICAgIFx0LnRpdGxlIHtcbiAgICAgICAgICBcdFx0Zm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICBcdFx0Zm9udC1zaXplOiAxNHB4O1xuICAgICAgICBcdH1cblxuICAgICAgICBcdC50aW1lIHtcbiAgICAgICAgIFx0XHRmb250LXNpemU6IDEycHg7XG4gICAgICAgIFx0fVxuXG4gICAgICAgIFx0LmNsb3NlIHtcbiAgICAgICAgICBcdFx0Zm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgIFx0XHR3aWR0aDogMThweDtcblx0ICAgICAgICAgIGhlaWdodDogMThweDtcblx0ICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuXHQgICAgICAgIH1cblxuXHQgICAgICAgICYucHJpbWFyeSB7XG5cdCAgICAgICAgICAuaWNvbiB7XG5cdCAgICAgICAgICAgIGJhY2tncm91bmQ6ICNjY2M7XG5cdCAgICAgICAgICAgIGNvbG9yOiAjZGRkO1xuXHQgICAgICAgICAgfVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgICYuYWNjZW50IHtcblx0ICAgICAgICAgIC5pY29uIHtcblx0ICAgICAgICAgICAgYmFja2dyb3VuZDogI2FhYTtcblx0ICAgICAgICAgICAgY29sb3I6ICNiYmI7XG5cdCAgICAgICAgICB9XG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgJi53YXJuIHtcblx0ICAgICAgICAgIC5pY29uIHtcblx0ICAgICAgICAgICAgYmFja2dyb3VuZDogI2VlZTtcblx0ICAgICAgICAgICAgY29sb3I6ICNkZGQ7XG5cdCAgICAgICAgICB9XG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgJi5yZWFkIHtcblx0ICAgICAgICAgIGNvbG9yOiAjOTk5O1xuXG5cdCAgICAgICAgICAubmFtZSB7XG5cdCAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG5cdCAgICAgICAgICB9XG5cdCAgICAgICAgfVxuICAgICAgXHR9XG4gICAgfVxuXG4gICAgLmZvb3RlciB7XG4gICAgICBcdG1pbi1oZWlnaHQ6IDQycHg7XG4gICAgICBcdGJvcmRlci10b3A6IDFweCBzb2xpZCAjRUVFO1xuXG5cdCAgICAuYWN0aW9uIHtcblx0ICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cdCAgICAgICAgY29sb3I6ICNBQUE7XG5cdCAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXHQgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcblx0ICAgIH1cbiAgICB9XG5cbiAgICAuZGl2aWRlciB7XG4gICAgICBcdHdpZHRoOiBjYWxjKDEwMCUgLSAzMHB4KTtcbiAgICAgIFx0aGVpZ2h0OiAxcHg7XG4gICAgICBcdGJhY2tncm91bmQ6ICNFRUU7XG4gICAgICBcdG1hcmdpbjogMCAxNnB4IDAgMTRweDtcbiAgICB9XG59XG4iXX0= */\"","import { Component, OnInit, Input, HostListener, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'cdk-toolbar-notification',\n  templateUrl: './toolbar-notification.component.html',\n  styleUrls: ['./toolbar-notification.component.scss']\n})\nexport class ToolbarNotificationComponent implements OnInit {\n\tcssPrefix = 'toolbar-notification';\n  \tisOpen: boolean = false;\n  \t@Input() notifications = [];\n\n    // @HostListener('document:click', ['$event', '$event.target'])\n    // onClick(event: MouseEvent, targetElement: HTMLElement) {\n    //     if (!targetElement) {\n    //           return;\n    //     }\n    //     const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n    //     if (!clickedInside) {\n    //          this.isOpen = false;\n    //     }\n    // }\n  \t\n  \tconstructor(private elementRef: ElementRef) { }\n\n  \tngOnInit() {\n  \t}\n\n  \tselect() {\n    \t\n  \t}\n\n  \tdelete(notification) {\n    \n  \t}\n\n}\n","module.exports = \"<!-- <stbui-loading *ngIf=\\\"showLoading\\\"></stbui-loading> -->\\r\\n<mat-toolbar   class=\\\"mat-elevation-z4\\\">  \\r\\n\\t<button mat-icon-button (click)=\\\"sidenav.toggle();drawer.toggle();\\\" *ngIf=\\\"matDrawerShow\\\">\\r\\n        <i class=\\\"material-icons app-toolbar-menu\\\">menu </i>\\r\\n    </button> \\r\\n    <button mat-icon-button (click)=\\\"sidenav.toggle();\\\" *ngIf=\\\"!matDrawerShow\\\">\\r\\n        <i class=\\\"material-icons app-toolbar-menu\\\">menu </i>\\r\\n    </button>\\r\\n\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n\\r\\n    <button  mat-icon-button (click)=\\\"searchOpen = !searchOpen\\\" fxHide=\\\"true\\\" [fxHide.gt-xs]=\\\"false\\\">\\r\\n        <i class=\\\"material-icons\\\">search</i>\\r\\n    </button>\\r\\n    <cdk-search-bar [open]=\\\"searchOpen\\\"></cdk-search-bar>\\r\\n\\r\\n    <!-- <cdk-fullscreen></cdk-fullscreen> -->\\r\\n\\r\\n    <!-- <cdk-toolbar-notification [notifications]=\\\"toolbarHelpers?.notifications\\\"></cdk-toolbar-notification> -->\\r\\n\\r\\n    <cdk-user-menu [currentUser]=\\\"currentUser\\\"></cdk-user-menu>\\r\\n    \\r\\n     <!-- <button mat-icon-button (click)=\\\"sidebar.toggle();\\\">\\r\\n        <i class=\\\"material-icons app-toolbar-menu\\\">menu </i>\\r\\n    </button> -->\\r\\n    \\r\\n</mat-toolbar>\"","module.exports = \":host {\\n  z-index: 4; }\\n\\n.main-toolbar {\\n  height: 64px;\\n  padding-left: 16px; }\\n\\n.more-btn {\\n  height: 100%;\\n  min-width: 70px; }\\n\\n.mat-icon-button {\\n  margin-right: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS90b29sYmFyL0M6XFxVc2Vyc1xcTWluaGF6XFxEb2N1bWVudHNcXGFuZ3VsYXJUZXN0c1xcY2l0aXplbi1mcm9udC9zcmNcXGFwcFxcY29yZVxcdG9vbGJhclxcdG9vbGJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVUsRUFDWDs7QUFFRDtFQUNFLGFBQVk7RUFDWixtQkFBa0IsRUFDbkI7O0FBRUQ7RUFDRSxhQUFZO0VBQ1osZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxtQkFBa0IsRUFDbkIiLCJmaWxlIjoic3JjL2FwcC9jb3JlL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgei1pbmRleDogNDtcbn1cblxuLm1haW4tdG9vbGJhciB7XG4gIGhlaWdodDogNjRweDtcbiAgcGFkZGluZy1sZWZ0OiAxNnB4O1xufVxuXG4ubW9yZS1idG4ge1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1pbi13aWR0aDogNzBweDtcbn1cblxuLm1hdC1pY29uLWJ1dHRvbiB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\n//import { ToolbarHelpers } from './toolbar.helpers';\r\n\r\n@Component({\r\n  selector: 'cdk-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\t\r\n  @Input() sidenav;\r\n\t@Input() sidebar;\r\n\t@Input() drawer;\r\n\t@Input() matDrawerShow;\r\n\t\r\n\t\r\n\tsearchOpen: boolean = false;\r\n\tcurrentUser: String;\r\n    //toolbarHelpers = ToolbarHelpers;\r\n  \tconstructor() { }\r\n\r\n  \tngOnInit() {\r\n\t\t\tconsole.log(\"Toolbars's user component after initialized\");\r\n\t\t\tlet currentUserData = JSON.parse(localStorage.getItem('currentUser'));\r\n\t\t\tthis.currentUser = currentUserData['name'];\t\r\n\t\t\tconsole.log(this.currentUser);\r\n\t\t}\r\n\t\t\r\n\t\t// ngAfterContentInit(): void {\r\n\t\t// \t//Called after ngOnInit when the component's or directive's content has been initialized.\r\n\t\t// \t//Add 'implements AfterContentInit' to the class.\r\n\t\t// \tconsole.log(\"Toolbars's user component after initialized\");\r\n\t\t// \tlet currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n\t\t// \tthis.currentUserName = currentUser['name'];\t\r\n\t\t// }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"toolbar-user-container\\\">\\r\\n\\t<button mat-button (click)=\\\"isOpen = !isOpen\\\" class=\\\"toolbar-user-btn\\\" [class.open]=\\\"isOpen\\\" [ngStyle.xs]=\\\"{'min-width': '70px'}\\\">\\r\\n  \\t\\t<span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n    \\t\\t<span class=\\\"name\\\" fxHide fxShow.gt-xs>{{currentUser}}</span>\\r\\n    \\t\\t<mat-icon class=\\\"icon\\\" fxHide fxShow.gt-xs>keyboard_arrow_down</mat-icon>\\r\\n  \\t\\t</span>\\r\\n  \\t</button>\\r\\n\\r\\n\\r\\n  \\t<div class=\\\"dropdown mat-elevation-z1\\\" [class.open]=\\\"isOpen\\\">\\r\\n    \\t<div class=\\\"content\\\">\\r\\n      \\t\\t<mat-nav-list>\\r\\n      \\t\\t\\t<mat-list-item>\\r\\n      \\t\\t\\t\\t<a matLine >Profile</a>\\r\\n\\t\\t\\t\\t    <button mat-icon-button>\\r\\n\\t\\t\\t\\t       <mat-icon>account_circle</mat-icon>\\r\\n\\t\\t\\t\\t    </button>\\r\\n      \\t\\t\\t</mat-list-item>\\r\\n\\r\\n\\r\\n      \\t\\t\\t<mat-divider></mat-divider>\\r\\n\\r\\n      \\t\\t\\t<mat-list-item>\\r\\n      \\t\\t\\t\\t<a matLine (click)=\\\"logout()\\\">Logout</a>\\r\\n\\t\\t\\t\\t    <button mat-icon-button>\\r\\n\\t\\t\\t\\t       <mat-icon>exit_to_app</mat-icon>\\r\\n\\t\\t\\t\\t    </button>\\r\\n      \\t\\t\\t</mat-list-item>\\r\\n      \\t\\t</mat-nav-list>\\r\\n    \\t</div>\\r\\n  \\t</div>\\r\\n</div>\"","module.exports = \":host {\\n  height: 100%; }\\n\\n.toolbar-user-container {\\n  height: 100%;\\n  position: relative; }\\n\\n.toolbar-user-container .toolbar-user-btn {\\n    display: flex;\\n    justify-content: center;\\n    height: 100%;\\n    min-width: 160px; }\\n\\n.toolbar-user-container .toolbar-user-btn .avatar {\\n      width: 30px;\\n      height: 30px;\\n      border-radius: 50%; }\\n\\n.toolbar-user-container .toolbar-user-btn .name {\\n      margin: 0 8px 0 10px;\\n      font-size: 19px; }\\n\\n.toolbar-user-container .toolbar-user-btn .icon {\\n      width: 16px;\\n      height: 16px;\\n      font-size: 16px;\\n      -webkit-transform: rotate(0);\\n              transform: rotate(0);\\n      transition: -webkit-transform 0.25s cubic-bezier(0.25, 0.8, 0.25, 1);\\n      transition: transform 0.25s cubic-bezier(0.25, 0.8, 0.25, 1);\\n      transition: transform 0.25s cubic-bezier(0.25, 0.8, 0.25, 1), -webkit-transform 0.25s cubic-bezier(0.25, 0.8, 0.25, 1); }\\n\\n.toolbar-user-container .toolbar-user-btn.open {\\n      background: rgba(0, 0, 0, 0.05); }\\n\\n.toolbar-user-container .toolbar-user-btn.open .icon {\\n        -webkit-transform: rotate(-180deg);\\n                transform: rotate(-180deg); }\\n\\n.toolbar-user-container .dropdown {\\n    background: white;\\n    z-index: 2;\\n    position: absolute;\\n    width: 100%;\\n    min-width: 160px;\\n    opacity: 0;\\n    visibility: hidden;\\n    transition: all .25s linear, max-height .25s linear, opacity .25s linear; }\\n\\n@media screen and (max-width: 599px) {\\n      .toolbar-user-container .dropdown {\\n        min-width: 65px; } }\\n\\n.toolbar-user-container .dropdown.open {\\n      opacity: 1;\\n      visibility: visible; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS91c2VyLW1lbnUvQzpcXFVzZXJzXFxNaW5oYXpcXERvY3VtZW50c1xcYW5ndWxhclRlc3RzXFxjaXRpemVuLWZyb250L3NyY1xcYXBwXFxjb3JlXFx1c2VyLW1lbnVcXHVzZXItbWVudS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQVksRUFDYjs7QUFFRDtFQUNJLGFBQVk7RUFDWixtQkFBa0IsRUF1RHJCOztBQXpERDtJQUtRLGNBQWE7SUFDYix3QkFBdUI7SUFDdkIsYUFBWTtJQUNaLGlCQUFnQixFQTRCckI7O0FBcENIO01BV1EsWUFBVztNQUNYLGFBQVk7TUFDWixtQkFBa0IsRUFDckI7O0FBZEw7TUFpQlEscUJBQW9CO01BQ3BCLGdCQUFlLEVBQ2xCOztBQW5CTDtNQXNCUSxZQUFXO01BQ1gsYUFBWTtNQUNaLGdCQUFlO01BQ2YsNkJBQW9CO2NBQXBCLHFCQUFvQjtNQUNwQixxRUFBcUQ7TUFBckQsNkRBQXFEO01BQXJELHVIQUFxRCxFQUN4RDs7QUEzQkw7TUE4QlEsZ0NBQThCLEVBS2pDOztBQW5DTDtRQWlDUSxtQ0FBMEI7Z0JBQTFCLDJCQUEwQixFQUMzQjs7QUFsQ1A7SUF1Q1Esa0JBQWlCO0lBQ2pCLFdBQVU7SUFDVixtQkFBa0I7SUFDbEIsWUFBVztJQUNYLGlCQUFnQjtJQUNoQixXQUFVO0lBQ1YsbUJBQWtCO0lBQ2xCLHlFQUF3RSxFQVUzRTs7QUFSRztNQWhEUjtRQWlEWSxnQkFBZSxFQU90QixFQUFBOztBQXhETDtNQXFEWSxXQUFVO01BQ1Ysb0JBQW1CLEVBQ3RCIiwiZmlsZSI6InNyYy9hcHAvY29yZS91c2VyLW1lbnUvdXNlci1tZW51LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnRvb2xiYXItdXNlci1jb250YWluZXIge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgIC50b29sYmFyLXVzZXItYnRuIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBtaW4td2lkdGg6IDE2MHB4O1xyXG5cclxuICAgIC5hdmF0YXIge1xyXG4gICAgICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB9XHJcblxyXG4gICAgLm5hbWUge1xyXG4gICAgICAgIG1hcmdpbjogMCA4cHggMCAxMHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICAgIH1cclxuXHJcbiAgICAuaWNvbiB7XHJcbiAgICAgICAgd2lkdGg6IDE2cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxNnB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjI1cyBjdWJpYy1iZXppZXIoLjI1LC44LC4yNSwxKTtcclxuICAgIH1cclxuXHJcbiAgICAmLm9wZW4ge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgLjA1KTtcclxuXHJcbiAgICAgIC5pY29uIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTgwZGVnKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgICAuZHJvcGRvd24ge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1pbi13aWR0aDogMTYwcHg7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4yNXMgbGluZWFyLCBtYXgtaGVpZ2h0IC4yNXMgbGluZWFyLCBvcGFjaXR5IC4yNXMgbGluZWFyO1xyXG5cclxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OTlweCkge1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDY1cHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLm9wZW4ge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit, Input, HostListener, ElementRef } from '@angular/core';\r\nimport { AuthServices } from 'src/app/services/auth-services.service';\r\n\r\n@Component({\r\n  selector: 'cdk-user-menu',\r\n  templateUrl: './user-menu.component.html',\r\n  styleUrls: ['./user-menu.component.scss']\r\n})\r\nexport class UserMenuComponent implements OnInit {\r\n\tisOpen: boolean = false;\r\n\r\n  \t\r\n\r\n  \t@Input() currentUser = null;\r\n  \t@HostListener('document:click', ['$event', '$event.target'])\r\n  \tonClick(event: MouseEvent, targetElement: HTMLElement) {\r\n    \tif (!targetElement) {\r\n     \t\treturn;\r\n    \t}\r\n\r\n    \tconst clickedInside = this.elementRef.nativeElement.contains(targetElement);\r\n    \tif (!clickedInside) {\r\n      \t\tthis.isOpen = false;\r\n    \t}\r\n  \t}\r\n  \t\r\n    \r\n  \tconstructor(private elementRef: ElementRef, private authService: AuthServices) { }\r\n\r\n\r\n  \tngOnInit() {\r\n\t  }\r\n\t  \r\n\tlogout(){\r\n\t\tthis.authService.logout();\r\n\t}\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[validateEqual][formControlName], [validateEqual][formControl], [validateEqual][ngModel]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true}\r\n  ]\r\n})\r\nexport class EqualValidator implements Validator {\r\n \r\n  constructor(@Attribute('validateEqual') public validateEqual: string) { }\r\n\r\n  validate(control: AbstractControl): { [key: string]: any } {\r\n    let selfValue = control.value;\r\n\r\n    let rootvalue = control.root.get(this.validateEqual);\r\n\r\n    if( rootvalue && selfValue != rootvalue) return {\r\n      validateEqual: false\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  // registerOnValidatorChange?(fn: () => void): void {\r\n  //   throw new Error(\"Method not implemented.\");\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthServices } from '../services/auth-services.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthServices) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authService.logout();\r\n                location.reload(true);\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        \r\n        if (request.headers.has(InterceptorSkipHeader)) {\r\n            const headers = request.headers.delete(InterceptorSkipHeader);\r\n            return next.handle(request.clone({ headers }));\r\n        }\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    \"Content-type\": \"application/json\",\r\n                    'Session-Token': `${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","module.exports = \".mainContainer {\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    align-items: stretch;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n/* .childContainer {\\r\\n    display: flex;\\r\\n    height: 100%;\\r\\n    align-items: stretch;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.upperContainer {\\r\\n    background-color: #3f51b5;\\r\\n    flex: 1 1 auto;\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 5px -1px, rgba(0, 0, 0, 0.14) 0px 6px 10px 0px, rgba(0, 0, 0, 0.12) 0px 1px 18px 0px;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.customPosition{\\r\\n    position: absolute;\\r\\n    height: 55%;\\r\\n    margin-top: 12%;\\r\\n    width: 25%;\\r\\n} */\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsY0FBYztJQUNkLHFCQUFxQjtJQUNyQix1QkFBdUI7Q0FDMUI7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFzQkkiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluQ29udGFpbmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi8qIC5jaGlsZENvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4udXBwZXJDb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNmNTFiNTtcclxuICAgIGZsZXg6IDEgMSBhdXRvO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjIpIDBweCAzcHggNXB4IC0xcHgsIHJnYmEoMCwgMCwgMCwgMC4xNCkgMHB4IDZweCAxMHB4IDBweCwgcmdiYSgwLCAwLCAwLCAwLjEyKSAwcHggMXB4IDE4cHggMHB4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uY3VzdG9tUG9zaXRpb257XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBoZWlnaHQ6IDU1JTtcclxuICAgIG1hcmdpbi10b3A6IDEyJTtcclxuICAgIHdpZHRoOiAyNSU7XHJcbn0gKi8iXX0= */\"","module.exports = \"<app-nav-bar *ngIf=\\\"!userLoggedIn\\\"></app-nav-bar>\\n<router-outlet></router-outlet>\\n<!-- <div class=\\\"container\\\">\\n   \\n    <div class=\\\"childContainer\\\" *ngIf=\\\"!userLoggedIn && !userLogPage\\\">\\n        <div class=\\\"upperContainer\\\">\\n            <div class=\\\"customPosition\\\">\\n                <router-outlet></router-outlet>\\n            </div>\\n        </div>\\n        <div style=\\\"flex: 1 1 auto;\\\">\\n\\n        </div>\\n    </div>\\n\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes,RouterModule } from '@angular/router';\r\n \r\nimport { ResearcherModule } from '../researcher/researcher.module';\r\nimport { AuthGuard } from '../services/auth-guard.service';\r\n\r\nconst routes: Routes = [   \r\n    {path: 'citizenpanel', loadChildren: '../researcher/researcher.module#ResearcherModule', canActivate: [AuthGuard]},\r\n    //{path: 'register', loadChildren: '../register/register.module#RegisterModule'},\r\n    //{path: 'signin', loadChildren: '../signin/login/login.module#LoginModule'},\r\n\r\n    //{path: '**', redirectTo: 'not-found'},\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule, ResearcherModule]\r\n})\r\nexport class LazyLoadModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { \n  MatToolbarModule, \n  MatButtonModule, \n  MatIconModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatListModule,\n  MatSidenavModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonToggleModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\n\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule, \n    MatSelectModule,\n    MatStepperModule, \n    MatListModule,\n    MatSidenavModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n\n  exports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatStepperModule,\n    MatListModule,\n    MatSidenavModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatTreeModule\n    \n  ]\n})\nexport class MaterialModule { }\n","import { Tags } from \"./tags.model\";\r\nimport { Fields } from \"./field.model\";\r\n\r\nexport class Observation{\r\n    accountId: string;\r\n    observationId: string\r\n    title: string;\r\n    description: string;\r\n    category: Number\r\n    tags: string[];\r\n    fields: Fields[];\r\n    \r\n    constructor(){}\r\n}","module.exports = \"\\r\\n.toolbarContent {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n\\r\\n.customFonSize{\\r\\n    font-size: 19px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LWJhci9uYXYtYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZUFBZTtDQUNsQjs7O0FBR0Q7SUFDSSxnQkFBZ0I7Q0FDbkIiLCJmaWxlIjoic3JjL2FwcC9uYXYtYmFyL25hdi1iYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4udG9vbGJhckNvbnRlbnQge1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuXHJcblxyXG4uY3VzdG9tRm9uU2l6ZXtcclxuICAgIGZvbnQtc2l6ZTogMTlweDtcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<!-- <div>\\n    <mat-toolbar>\\n        <mat-toolbar-row>\\n            <span class=\\\"spacer\\\"><a [routerLink]=\\\"'/'\\\">{{title}}</a></span>\\n            <span>\\n                <a [routerLink]=\\\"'/signin'\\\">\\n                    <button mat-icon-button>\\n                        <mat-icon>how_to_reg</mat-icon>Sign Up\\n                    </button>\\n                </a>\\n\\n            </span>\\n            <span>\\n                <a [routerLink]=\\\"'/signup'\\\">\\n                    <button mat-icon-button>\\n                        <mat-icon>account_circle</mat-icon>Sign In\\n                    </button>\\n                </a> </span>\\n        </mat-toolbar-row>\\n    </mat-toolbar>\\n</div> -->\\n\\n<mat-toolbar color=\\\"primary\\\" [ngStyle]=\\\"{\\n        'box-shadow':'0 3px 5px -1px rgba(0, 0, 0, .2), 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12)', \\n        'position':'relative', \\n        'z-index': '1'\\n    }\\\">\\n    <span class=\\\"toolbarContent\\\">Citizen App</span>\\n    <span>\\n        <a mat-button [routerLink]=\\\"'signup'\\\">\\n            <mat-icon>how_to_reg</mat-icon>\\n            <span>Sign Up</span>\\n        </a>\\n        <a mat-button [routerLink]=\\\"'signin'\\\" class=\\\"customFontSize\\\">\\n            <mat-icon>account_circle</mat-icon>\\n            <span>Sign In</span>\\n        </a>\\n        <!-- <a mat-button [routerLink]=\\\"'researcher'\\\" class=\\\"customFontSize\\\">\\n            <mat-icon>menu</mat-icon>\\n            <span>Dashboard</span>\\n        </a> -->\\n    </span>\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  title = \"Citizen\";\n  signUpLink = \"/signup\";\n  customStyles = {\n    fontSize : '19px'\n  };\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vLWFjY2Vzcy9uby1hY2Nlc3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  no-access works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-access',\n  templateUrl: './no-access.component.html',\n  styleUrls: ['./no-access.component.css']\n})\nexport class NoAccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>\\n  Page Not Found\\n</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"components-container-gt-xs\\\" fxLayoutGap=\\\"20px\\\">\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.lt-sm=\\\"column\\\" fxFlex=\\\"50\\\" fxLayoutAlign=\\\"start space-between\\\"\\r\\n    fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"row\\\" fxFlex=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\" style=\\\"width: 60%;\\\">\\r\\n\\r\\n      <mat-toolbar class=\\\"cards-header\\\">\\r\\n        <h1 class=\\\"mat-headline center-align\\\">Add Manual Fields</h1>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"cards-container\\\">\\r\\n\\r\\n        <div fxLayoutAlign=\\\"space-around\\\" fxLayoutWrap>\\r\\n          <mat-card>\\r\\n\\r\\n\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"formContainer\\\">\\r\\n                <form style=\\\"display: flex; flex-direction: column; max-width: 50%;\\\">\\r\\n                  <div class=\\\"formInputGroup\\\" style=\\\"display:flex; flex-direction: row;\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"Tags\\\">\\r\\n                    </mat-form-field>\\r\\n                    \\r\\n                    <button mat-icon-button color=\\\"primary\\\">\\r\\n                      <mat-icon style=\\\"font-size: 35px; margin-top: 12px;\\\">add_circle</mat-icon>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n            <mat-card-actions>\\r\\n              <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"primary\\\">Manual</button>\\r\\n              <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"accent\\\">Import</button>\\r\\n            </mat-card-actions>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div fxFlex.xs=\\\"100\\\"  class=\\\"cdk-card-holder\\\"  fxFlex.lg=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\" >\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<mat-toolbar class=\\\"cards-header\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h1 class=\\\"mat-headline center-align\\\" >Example</h1>\\r\\n\\t\\t\\t\\t\\t</mat-toolbar>\\r\\n\\t            \\r\\n\\t\\t            <div  fxLayoutAlign=\\\"space-around stretch\\\" fxLayoutWrap >\\r\\n\\r\\n\\t\\t                <mat-tab-group fxFlexFill>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"TS\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"component-preview\\\">\\r\\n\\t\\t\\t\\t\\t            \\t<pre style=\\\"white-space:pre-line;\\\"><code mwlHighlightJs [source]=\\\"cardsHelpers?.tsSourceCards\\\" language=\\\"typescript\\\"></code></pre>\\r\\n\\t\\t\\t\\t\\t            </div>\\r\\n\\t\\t\\t\\t\\t        </mat-tab>\\r\\n\\t\\t\\t\\t\\t        <mat-tab label=\\\"HTML\\\">\\r\\n\\t\\t\\t\\t\\t        \\t<div class=\\\"component-preview\\\">\\r\\n\\t\\t\\t\\t\\t            \\t<pre style=\\\"white-space:pre-line;\\\"><code mwlHighlightJs [source]=\\\"cardsHelpers?.htmlSourceCards\\\" language=\\\"html\\\"></code></pre>\\r\\n\\t\\t\\t\\t\\t            </div>\\r\\n\\t\\t\\t\\t\\t        </mat-tab>\\r\\n\\r\\n\\t\\t\\t\\t\\t    </mat-tab-group>\\r\\n\\r\\n\\t\\t            </div>\\r\\n\\t        \\t</div> -->\\r\\n\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VhcmNoZXIvYWRkLWZpZWxkcy9hZGQtZmllbGRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-fields',\r\n  templateUrl: './add-fields.component.html',\r\n  styleUrls: ['./add-fields.component.scss']\r\n})\r\nexport class AddFieldsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".cards-header {\\r\\n    background-color: #327ebd;\\r\\n    color: white;\\r\\n    padding: 12px;\\r\\n}\\r\\n.cards-container {\\r\\n    padding: 19px;\\r\\n    color: white;\\r\\n}\\r\\n.cdk-card-holder {\\r\\nborder: 1px solid #327ebd;\\r\\nbackground-color: white;\\r\\nborder-top-left-radius: 5px;\\r\\nborder-top-right-radius: 5px;\\r\\n}\\r\\n.listHeader, .listItems{\\r\\nborder: 3px solid lightgray;\\r\\nborder-radius: 5px;\\r\\npadding: 12px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZWFyY2hlci9hZGQtcmVjb3Jkcy9hZGQtcmVjb3Jkcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMEJBQTBCO0lBQzFCLGFBQWE7SUFDYixjQUFjO0NBQ2pCO0FBQ0Q7SUFDSSxjQUFjO0lBQ2QsYUFBYTtDQUNoQjtBQUVEO0FBQ0EsMEJBQTBCO0FBQzFCLHdCQUF3QjtBQUN4Qiw0QkFBNEI7QUFDNUIsNkJBQTZCO0NBQzVCO0FBRUQ7QUFDQSw0QkFBNEI7QUFDNUIsbUJBQW1CO0FBQ25CLGNBQWM7Q0FDYiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VhcmNoZXIvYWRkLXJlY29yZHMvYWRkLXJlY29yZHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkcy1oZWFkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMyN2ViZDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEycHg7XHJcbn1cclxuLmNhcmRzLWNvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nOiAxOXB4O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uY2RrLWNhcmQtaG9sZGVyIHtcclxuYm9yZGVyOiAxcHggc29saWQgIzMyN2ViZDtcclxuYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbmJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDVweDtcclxuYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLmxpc3RIZWFkZXIsIC5saXN0SXRlbXN7XHJcbmJvcmRlcjogM3B4IHNvbGlkIGxpZ2h0Z3JheTtcclxuYm9yZGVyLXJhZGl1czogNXB4O1xyXG5wYWRkaW5nOiAxMnB4O1xyXG59Il19 */\"","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"components-container-gt-xs\\\" fxLayoutGap=\\\"20px\\\" style=\\\"overflow: auto;\\\">\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" fxFlex=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n\\r\\n      <mat-toolbar class=\\\"cards-header\\\">\\r\\n        <h1 class=\\\"mat-headline center-align\\\">Add Records</h1>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"cards-container\\\">\\r\\n        <div class=\\\"formContainer\\\">\\r\\n          <form #createRecordsForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitRecords(createRecordsForm.value)\\\" >\\r\\n            <mat-card>\\r\\n              <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\" style=\\\"font-size: 15px;\\\">\\r\\n                <ng-container *ngFor=\\\"let field of observation.fields; let i = index;\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"{{field.title}}\\\" name=\\\"{{field.title}}\\\" ngModel #i=\\\"ngModel\\\" required>\\r\\n                    <mat-hint *ngIf=\\\"!i.touched\\\">Please enter the value of {{field.title}}</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"i.errors?.required\\\">\\r\\n                      {{field.title}} is <strong>required</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </ng-container>\\r\\n              </mat-card-content>\\r\\n              <mat-card-actions style=\\\"text-align: right; padding: 10px;\\\">\\r\\n                <!-- <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"primary\\\" [routerLink]=\\\"'addfields'\\\">Manual</button> -->\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"primary\\\" (click)=\\\"cancelRecord()\\\">Cancel</button>\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"createRecordsForm.invalid\\\">Create</button>\\r\\n              </mat-card-actions>\\r\\n            </mat-card>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observation } from 'src/app/models/observation.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { RecordService } from 'src/app/services/record.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-add-records',\r\n  templateUrl: './add-records.component.html',\r\n  styleUrls: ['./add-records.component.css']\r\n})\r\n\r\n\r\nexport class AddRecordsComponent implements OnInit {\r\n\r\n  observation: Observation;\r\n  data: any;\r\n  fields: any;\r\n  // record: Record;\r\n\r\n  @ViewChild('createRecordsForm') createRecordsForm: NgForm;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private recordService: RecordService,\r\n    public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.observation = new Observation();\r\n    this.observation = this.route.snapshot.data.data.observations[0]\r\n    // this.record = new Record();\r\n\r\n    console.log(this.observation);\r\n  }\r\n\r\n  onSubmitRecords(val) {\r\n    // console.log(val);\r\n    // this.record['observationId'] = this.observation.observationId;\r\n    // this.record['data'] = val;\r\n    let record = {\r\n      'observationId': this.observation.observationId,\r\n      'data': val\r\n    }\r\n    console.log(record);\r\n    this.recordService.addRecord(record)\r\n      .subscribe(res => {\r\n        this.snackBarMessage(\"Record Added Successfully\", \"Success\");\r\n        this.router.navigateByUrl(`citizenpanel/listrecords/${this.observation.observationId}`);\r\n\r\n      },\r\n        (error => {\r\n          this.snackBarMessage(\"Failed to add record\", \"Failed\");\r\n        })\r\n      );\r\n\r\n  }\r\n\r\n  cancelRecord() {\r\n    this.createRecordsForm.resetForm();\r\n    this.router.navigateByUrl(`citizenpanel/listrecords/${this.observation.observationId}`);\r\n  }\r\n\r\n  snackBarMessage(message, action) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 5500\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"components-container-gt-xs\\\" fxLayoutGap=\\\"20px\\\">\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" fxFlex=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n\\r\\n      <mat-toolbar class=\\\"cards-header\\\">\\r\\n        <h1 class=\\\"mat-headline center-align\\\">Create Observation</h1>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"cards-container\\\">\\r\\n        <div class=\\\"formContainer\\\">\\r\\n          <form #createObservationForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitObservation(createObservationForm.value)\\\" >\\r\\n            <mat-card>\\r\\n              <fieldset [disabled]=\\\"disableObservationForm\\\" style=\\\"border: 0;\\\" [style.opacity]=\\\"disabledOpacity\\\">\\r\\n              <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\" style=\\\"font-size: 15px;\\\">\\r\\n\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel #title=\\\"ngModel\\\" required>\\r\\n                  <mat-hint *ngIf=\\\"!title.touched\\\">Please enter the title of observation</mat-hint>\\r\\n                  <mat-error *ngIf=\\\"title.errors?.required\\\">\\r\\n                    Title is <strong>required</strong>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Description\\\" name=\\\"description\\\" ngModel #description=\\\"ngModel\\\" required>\\r\\n                  <mat-hint *ngIf=\\\"!description.touched\\\">Please enter the description of observation</mat-hint>\\r\\n                  <mat-error *ngIf=\\\"description.errors?.required\\\">\\r\\n                    Description is <strong>required</strong>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n                <!-- <div class=\\\"formInputGroup\\\" style=\\\"display:flex; flex-direction: row;\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Tags\\\">\\r\\n                  </mat-form-field>\\r\\n\\r\\n                  <button mat-icon-button color=\\\"primary\\\">\\r\\n                    <mat-icon style=\\\"font-size: 35px; margin-top: 12px;\\\">add_circle</mat-icon>\\r\\n                  </button>\\r\\n                </div> -->\\r\\n                <mat-form-field>\\r\\n                  <mat-chip-list #tagList>\\r\\n                    <mat-chip *ngFor=\\\"let tag of tags\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\" (removed)=\\\"remove(tag)\\\"\\r\\n                      color=\\\"primary\\\">\\r\\n                      {{tag.tag}}\\r\\n                      <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                    </mat-chip>\\r\\n                    <input placeholder=\\\"Tags for observation\\\" [matChipInputFor]=\\\"tagList\\\" \\r\\n                      [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n                      (matChipInputTokenEnd)=\\\"add($event)\\\" matTooltip=\\\"Press enter or comma for tags\\\">\\r\\n                  </mat-chip-list>\\r\\n                </mat-form-field>\\r\\n\\r\\n              </mat-card-content>\\r\\n            </fieldset>\\r\\n              <mat-card-actions style=\\\"text-align: right; padding: 10px;\\\">\\r\\n                <!-- <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"primary\\\" [routerLink]=\\\"'addfields'\\\">Manual</button> -->\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"primary\\\" type=\\\"submit\\\"\\r\\n                  [disabled]=\\\"createObservationForm.invalid\\\" (click)=\\\"manualSelectionPage()\\\">Manual</button>\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"createObservationForm.invalid\\\"\\r\\n                  (click)=\\\"importSelectionPage()\\\">Import</button>\\r\\n              </mat-card-actions>\\r\\n            </mat-card>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--Manual Record Selection Page-->\\r\\n    <div *ngIf=\\\"manualSelection\\\" fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\"\\r\\n      fxFlex=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n\\r\\n      <mat-toolbar class=\\\"cards-header\\\">\\r\\n        <h1 class=\\\"mat-headline center-align\\\">Add Fields</h1>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"cards-container\\\">\\r\\n        <div class=\\\"formContainer\\\">\\r\\n          <form #addFieldsFrom=\\\"ngForm\\\" (ngSubmit)=\\\"addObservationManually(addFieldsFrom)\\\">\\r\\n            <mat-card>\\r\\n\\r\\n              <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"35px\\\" style=\\\"font-size: 15px;\\\">\\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Title\\\" name=\\\"fieldTitle\\\" ngModel #fieldTitle=\\\"ngModel\\\" required>\\r\\n                    <mat-hint *ngIf=\\\"!fieldTitle.touched && fields.length === 0\\\">Please enter the title of field</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"fields.length === 0 && fieldTitle.errors?.required\\\">\\r\\n                      Field is <strong>required</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n\\r\\n\\r\\n                    <mat-select placeholder=\\\"Field Type\\\" name=\\\"fieldType\\\" ngModel #fieldType=\\\"ngModel\\\" required>\\r\\n                      <mat-option *ngFor=\\\"let field of fieldsType | keyvalue\\\" [value]=\\\"field\\\">\\r\\n                        {{field.key}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-hint *ngIf=\\\"!fieldType.touched && fields.length === 0\\\">Please select field type</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"fields.length === 0 && fieldType.hasError('required')\\\">\\r\\n                      Please select field <strong>type</strong>\\r\\n                    </mat-error>\\r\\n\\r\\n\\r\\n                  </mat-form-field>\\r\\n\\r\\n                  <button color=\\\"primary\\\" mat-icon-button [disabled]=\\\"addFieldsFrom.invalid\\\" (click)=\\\"addField(addFieldsFrom)\\\">\\r\\n                    <mat-icon style=\\\"font-size: 35px; margin-top: 22px;\\\">add_circle</mat-icon>\\r\\n                  </button>\\r\\n\\r\\n                </div>\\r\\n                <mat-nav-list #fieldList>\\r\\n                  <div *ngIf=\\\"fields.length > 0\\\" class=\\\"listHeader\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"55px\\\" fxLayoutAlign=\\\"start space-around \\\">\\r\\n                    <span>Field Title</span>\\r\\n                    <span>Field Type</span>\\r\\n                  </div>\\r\\n                  <mat-list-item *ngFor=\\\"let field of fields\\\">\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"55px\\\" fxLayoutAlign=\\\"start space-around\\\" style=\\\"margin-top:7px;\\\"\\r\\n                      fxFlex=\\\"1 1 auto\\\">\\r\\n                      <span fxFlex=\\\"65px\\\">{{field.fieldTitle}}</span>\\r\\n                      <span fxFlex=\\\"65px\\\">{{field.fieldType.key}}</span>\\r\\n                      <div style=\\\"position:relative; top: -10px;\\\">\\r\\n                        <button color=\\\"primary\\\" mat-icon-button (click)=\\\"removeField(field)\\\">\\r\\n                          <mat-icon>delete</mat-icon>\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </mat-list-item>\\r\\n                </mat-nav-list>\\r\\n              </mat-card-content>\\r\\n              <mat-card-actions style=\\\"text-align: right; padding: 10px;\\\">\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"primary\\\" (click)=\\\"cancelField()\\\">Cancel</button>\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"accent\\\" [disabled]=\\\"(fields.length == 0)\\\"\\r\\n                  type=\\\"submit\\\">Create</button>\\r\\n              </mat-card-actions>\\r\\n            </mat-card>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--End Manual Record Selection Page-->\\r\\n\\r\\n    <!--Import Record Page-->\\r\\n\\r\\n    <div *ngIf=\\\"importSelection\\\" fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\"\\r\\n      fxFlex=\\\"50\\\" fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n\\r\\n      <mat-toolbar class=\\\"cards-header\\\">\\r\\n        <h1 class=\\\"mat-headline center-align\\\">Import</h1>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"cards-container\\\">\\r\\n        <div class=\\\"formContainer\\\">\\r\\n          <form #addImportUrlFrom=\\\"ngForm\\\" (ngSubmit)=\\\"addObservationByImport(addImportUrlFrom.value)\\\">\\r\\n            <mat-card>\\r\\n\\r\\n              <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"35px\\\" style=\\\"font-size: 15px;\\\">\\r\\n\\r\\n                <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"5px\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Google Sheete Url\\\" name=\\\"urlInput\\\" ngModel #urlInput=\\\"ngModel\\\" required>\\r\\n                    <mat-hint *ngIf=\\\"!urlInput.touched && urlInput.length === 0\\\">Please enter the url of observation</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"urlInput.length === 0 && urlInput.errors?.required\\\">\\r\\n                      Url is <strong>required</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </mat-card-content>\\r\\n              <mat-card-actions style=\\\"text-align: right; padding: 10px;\\\">\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"cancelImport()\\\">Cancel</button>\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"accent\\\" [disabled]=\\\"addImportUrlFrom.invalid && fields.length == 0\\\"\\r\\n                  tytpe=\\\"submit\\\">Import</button>\\r\\n              </mat-card-actions>\\r\\n            </mat-card>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!--Import Record End-->\\r\\n  </div>\\r\\n\\r\\n</div>\"","module.exports = \".cards-header {\\n  background-color: #327ebd;\\n  color: white;\\n  padding: 12px; }\\n\\n.cards-container {\\n  padding: 19px; }\\n\\n.cdk-card-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white;\\n  border-top-left-radius: 5px;\\n  border-top-right-radius: 5px; }\\n\\n.listHeader, .listItems {\\n  border: 3px solid lightgray;\\n  border-radius: 5px;\\n  padding: 12px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZWFyY2hlci9jcmVhdGUtb2JzZXJ2YXRpb24vQzpcXFVzZXJzXFxNaW5oYXpcXERvY3VtZW50c1xcYW5ndWxhclRlc3RzXFxjaXRpemVuLWZyb250L3NyY1xcYXBwXFxyZXNlYXJjaGVyXFxjcmVhdGUtb2JzZXJ2YXRpb25cXGNyZWF0ZS1vYnNlcnZhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQztFQUNDLDBCQUF5QjtFQUN6QixhQUFZO0VBQ1osY0FBYSxFQUNiOztBQUNEO0VBQ0MsY0FBYSxFQUViOztBQUVGO0VBQ0MsMEJBQXlCO0VBQ3pCLHdCQUF1QjtFQUN2Qiw0QkFBMkI7RUFDM0IsNkJBQTRCLEVBQzVCOztBQUVEO0VBQ0MsNEJBQTJCO0VBQ3hCLG1CQUFrQjtFQUNsQixjQUFhLEVBQ2hCIiwiZmlsZSI6InNyYy9hcHAvcmVzZWFyY2hlci9jcmVhdGUtb2JzZXJ2YXRpb24vY3JlYXRlLW9ic2VydmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gY2RrLWNhcmRzIHtcclxuXHQuY2FyZHMtaGVhZGVyIHtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICMzMjdlYmQ7XHJcblx0XHRjb2xvcjogd2hpdGU7XHJcblx0XHRwYWRkaW5nOiAxMnB4O1xyXG5cdH1cclxuXHQuY2FyZHMtY29udGFpbmVyIHtcclxuXHRcdHBhZGRpbmc6IDE5cHg7XHJcblx0XHQvLyBjb2xvcjogd2hpdGU7XHJcblx0fVxyXG5cclxuLmNkay1jYXJkLWhvbGRlciB7XHJcblx0Ym9yZGVyOiAxcHggc29saWQgIzMyN2ViZDtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuXHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA1cHg7XHJcblx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLmxpc3RIZWFkZXIsIC5saXN0SXRlbXN7XHJcblx0Ym9yZGVyOiAzcHggc29saWQgbGlnaHRncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTJweDtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent, MatSnackBar } from '@angular/material';\r\nimport { Tags } from 'src/app/models/tags.model';\r\nimport { FormGroup, FormControl, FormArray, Validators, FormBuilder, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observation } from 'src/app/models/observation.model';\r\nimport { ObservationService } from 'src/app/services/observation.service';\r\nimport { Fields } from 'src/app/models/field.model';\r\nimport { Url } from 'url-parse';\r\nimport { GoogleAppServiceService } from 'src/app/services/google-app-service.service';\r\nimport { RecordService } from 'src/app/services/record.service';\r\n\r\n@Component({\r\n  selector: 'app-create-observation',\r\n  templateUrl: './create-observation.component.html',\r\n  styleUrls: ['./create-observation.component.scss']\r\n})\r\nexport class CreateObservationComponent implements OnInit {\r\n\r\n  fieldsType = new Map([\r\n    ['File', 1],\r\n    ['Number', 2],\r\n    ['Text', 3]\r\n  ]);\r\n\r\n  fields: Fields[] = [];\r\n\r\n\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  manualSelection: Boolean;\r\n  importSelection: Boolean;\r\n  disableObservationForm: Boolean;\r\n  disabledOpacity: Number;\r\n\r\n  @ViewChild(\"createObservationForm\") createObservationForm: NgForm;\r\n  @ViewChild(\"addFieldsFrom\") addFieldsFrom: NgForm;\r\n\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  tags: Tags[] = [];\r\n  data: any;\r\n\r\n\r\n  observation: Observation;\r\n\r\n  constructor(private route: Router, private fb: FormBuilder, public snackBar: MatSnackBar,\r\n    private observationService: ObservationService,\r\n    private googleAppService: GoogleAppServiceService,\r\n    private addRecordService: RecordService) {\r\n    this.manualSelection = false;\r\n    this.importSelection = false;\r\n    this.observation = new Observation();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    if ((value || '').trim()) {\r\n      this.tags.push({ tag: value.trim() });\r\n    }\r\n\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n  }\r\n\r\n  remove(tag: Tags): void {\r\n    const index = this.tags.indexOf(tag);\r\n\r\n    if (index >= 0) {\r\n      this.tags.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  onSubmitObservation(observation) {\r\n    console.log(observation.title);\r\n    this.observation.title = observation['title'];\r\n    this.observation.description = observation['description'];\r\n    this.observation.category = 1;\r\n    this.observation.tags = this.tags.map(t => { return t.tag });\r\n    this.disableForm()\r\n    // console.log(this.observation);\r\n    // console.log(observationForm.value);\r\n\r\n  }\r\n\r\n  manualSelectionPage() {\r\n    this.manualSelection = true;\r\n    this.importSelection = false;\r\n  }\r\n\r\n  importSelectionPage() {\r\n    this.importSelection = true;\r\n    this.manualSelection = false;\r\n  }\r\n\r\n  addField(fieldForm: NgForm) {\r\n    this.fields.push(fieldForm.value);\r\n    fieldForm.reset();\r\n    console.log(this.fields);\r\n  }\r\n\r\n  removeField(field) {\r\n    let index = this.fields.indexOf(field);\r\n    this.fields.splice(index, 1);\r\n  }\r\n\r\n  addObservationManually(addFieldsFrom: NgForm) {\r\n    this.observation.fields = this.fields.map(val => <Fields>{\r\n      fieldTitle: val.fieldTitle,\r\n      fieldType: val.fieldType['value']\r\n    });\r\n    console.log(JSON.stringify(this.observation));\r\n\r\n    this.observationService.addObservation(this.observation)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.snackBarMessage('Observation added successfully', 'Success');\r\n      },\r\n        (error: Response) => {\r\n          console.log(error);\r\n          this.snackBarMessage('Failed to add Observation', 'Failed');\r\n        });\r\n\r\n    addFieldsFrom.resetForm();\r\n    this.createObservationForm.resetForm();\r\n    this.manualSelection = false;\r\n    this.enableForm();\r\n    // this.route.navigateByUrl('/citizenpanel/list');\r\n  }\r\n\r\n  addObservationByImport(urlString: string) {\r\n    let url: string = urlString['urlInput'].toString();\r\n    let idExp = new RegExp(/[-\\w]{25,}/);\r\n    let urlId = idExp.exec(url)[0];\r\n\r\n    // let prr = this.googleAppService.load(urlId)\r\n    //   .then( (data) => {\r\n    //     return this.data = data;\r\n    //     // for(let v of data['0']){\r\n    //     //   console.log(v);\r\n    //     // }\r\n    //   },\r\n    //   (error) => {\r\n    //     console.log(error);\r\n    //   })\r\n\r\n    // this.googleAppService.load(urlId)\r\n    //   .subscribe(data => {\r\n    //     this.data = data;\r\n    //     // console.log(data[0]);\r\n    //     let singleSubject = data[0];\r\n    //       for(let key in singleSubject){\r\n    //         let val = {'fieldTitle': key, 'fieldType': 3}\r\n    //         this.fields.push(val)\r\n    //       }\r\n\r\n    //       this.observation.fields = this.fields;\r\n    //       this.observation.category = 1;\r\n    //       console.log(this.observation);\r\n    //       this.observationService.addObservation(this.observation)\r\n    //         .subscribe(res => {\r\n    //           console.log(res['observationId']);\r\n    //           this.snackBarMessage('Observation created Successfully', 'success');\r\n    //           // let record = {\r\n    //           //   'observationId': res['observationId'],\r\n    //           //   'data': this.data.forEach(element => {\r\n    //           //     return element \r\n    //           //   })\r\n    //           // }\r\n    //           // console.log(record);\r\n    //           // this.addRecordService.addRecord(record).subscribe(res => {\r\n    //           //   console.log('record added successfully');\r\n    //           // })\r\n    //         },\r\n    //         (err) => {\r\n    //           this.snackBarMessage('Observation can\\'t be added', 'failed' );\r\n    //         })\r\n\r\n    //       // console.log(this.fields);\r\n    //   },\r\n    //   (error) => {\r\n    //     console.log('Can\\'t load data');\r\n    //   },\r\n    //   () =>{\r\n\r\n    //   })\r\n\r\n\r\n    let message = '';\r\n    let data = {}\r\n\r\n    this.observation.fields = [];\r\n\r\n    this.observationService.addObservation(this.observation)\r\n      .subscribe(res => {\r\n        // console.log(res);\r\n        data = {\r\n          'observationId': res['observationId'],\r\n          'spreadSheetId': urlId\r\n        }\r\n        this.googleAppService.importSreadsheet(data)\r\n          .subscribe(resImport => {\r\n            this.snackBarMessage(resImport.toString(), 'Success')\r\n          },\r\n            (error) => {\r\n              if (error.status === 400)\r\n                message = error.error.error.toString().split();\r\n                this.snackBarMessage(message, \"Falied\");\r\n                console.log(error);\r\n            })\r\n        console.log(data);\r\n        this.snackBarMessage('Observation imported successfully', 'Success');\r\n      },\r\n      (error: Response) => {\r\n        console.log(error);\r\n        this.snackBarMessage('Failed to add Observation', 'Failed');\r\n      });\r\n  }\r\n\r\n  disableForm() {\r\n    this.disableObservationForm = true;\r\n    this.disabledOpacity = 0.5;\r\n  }\r\n\r\n  enableForm() {\r\n    this.disableObservationForm = false;\r\n    this.disabledOpacity = 1;\r\n  }\r\n\r\n  cancelField() {\r\n    this.fields = [];\r\n    this.manualSelection = false;\r\n    this.enableForm();\r\n  }\r\n\r\n  cancelImport() {\r\n    this.enableForm();\r\n    this.importSelection = false;\r\n  }\r\n  snackBarMessage(message, action) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 5500\r\n    });\r\n  }\r\n\r\n  // onNoField(){\r\n  //   if(this.fields.length === 0 && this.addFieldsFrom.invalid) return true\r\n\r\n  //   return false;\r\n  // }\r\n}\r\n","module.exports = \".cards-header {\\r\\n    background-color: #327ebd;\\r\\n    color: white;\\r\\n    padding: 12px;\\r\\n}\\r\\n\\r\\n.cards-container {\\r\\n    padding: 19px;\\r\\n}\\r\\n\\r\\n.cdk-card-holder {\\r\\n    border: 1px solid #327ebd;\\r\\n    background-color: white;\\r\\n    border-top-left-radius: 5px;\\r\\n    border-top-right-radius: 5px;\\r\\n}\\r\\n\\r\\n.listHeader, .listItems {\\r\\n    border: 3px solid lightgray;\\r\\n    border-radius: 5px;\\r\\n    padding: 12px;\\r\\n}\\r\\n\\r\\n.observation-table {\\r\\n    min-height: 360px;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.spinner-container{\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\\r\\n.spinner-container mat-spinner {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.mat-table_message{\\r\\n    text-align: center;\\r\\n    opacity: 0.8;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZWFyY2hlci9leHBsb3JlLW9ic2VydmF0aW9ucy9leHBsb3JlLW9ic2VydmF0aW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMEJBQTBCO0lBQzFCLGFBQWE7SUFDYixjQUFjO0NBQ2pCOztBQUVEO0lBQ0ksY0FBYztDQUNqQjs7QUFFRDtJQUNJLDBCQUEwQjtJQUMxQix3QkFBd0I7SUFDeEIsNEJBQTRCO0lBQzVCLDZCQUE2QjtDQUNoQzs7QUFFRDtJQUNJLDRCQUE0QjtJQUM1QixtQkFBbUI7SUFDbkIsY0FBYztDQUNqQjs7QUFFRDtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7Q0FDcEI7O0FBRUQ7SUFDSSxpQkFBaUI7Q0FDcEI7O0FBQ0Q7SUFDSSxhQUFhO0NBQ2hCOztBQUVEO0lBQ0ksbUJBQW1CO0lBQ25CLGFBQWE7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC9yZXNlYXJjaGVyL2V4cGxvcmUtb2JzZXJ2YXRpb25zL2V4cGxvcmUtb2JzZXJ2YXRpb25zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHMtaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMjdlYmQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG59XHJcblxyXG4uY2FyZHMtY29udGFpbmVyIHtcclxuICAgIHBhZGRpbmc6IDE5cHg7XHJcbn1cclxuXHJcbi5jZGstY2FyZC1ob2xkZXIge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzMyN2ViZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNXB4O1xyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLmxpc3RIZWFkZXIsIC5saXN0SXRlbXMge1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgbGlnaHRncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTJweDtcclxufVxyXG5cclxuLm9ic2VydmF0aW9uLXRhYmxlIHtcclxuICAgIG1pbi1oZWlnaHQ6IDM2MHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLnNwaW5uZXItY29udGFpbmVye1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxufVxyXG4uc3Bpbm5lci1jb250YWluZXIgbWF0LXNwaW5uZXIge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4ubWF0LXRhYmxlX21lc3NhZ2V7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBvcGFjaXR5OiAwLjg7XHJcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"components-container-gt-xs\\\" fxLayoutGap=\\\"20px\\\" >\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" fxFlex\\r\\n      fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n\\r\\n      <mat-toolbar class=\\\"cards-header\\\">\\r\\n        <h1 class=\\\"mat-headline center-align\\\">Observations List</h1>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"cards-container\\\">\\r\\n\\r\\n        <mat-card>\\r\\n\\r\\n          <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\" style=\\\"font-size: 15px;\\\">\\r\\n            <mat-form-field style=\\\"max-width: 35%;\\\">\\r\\n\\r\\n              <input matTooltip=\\\"Search by title, tags\\\" matInput placeholder=\\\"Search observations\\\" #searchInput>\\r\\n\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- <div class=\\\"spinner-container\\\" *ngIf=\\\"dataSource.loading$ | async\\\">\\r\\n\\r\\n              <mat-spinner [diameter]=\\\"35\\\"></mat-spinner>\\r\\n\\r\\n            </div> -->\\r\\n\\r\\n            <mat-table class=\\\"lmat-elevation-z8\\\" [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"id\\\" matSortDirection=\\\"asc\\\"\\r\\n              matSortDisableClear>\\r\\n              <!-- Material table HTML -->\\r\\n              <ng-container matColumnDef=\\\"title\\\">\\r\\n                <!-- ATTRIBUTE mat-sort-header  for sorting | https://material.angular.io/components/sort/overview -->\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Title</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.title}}</mat-cell>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"description\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Description</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.description}}</mat-cell>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"category\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Category</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.category}}</mat-cell>\\r\\n              </ng-container>\\r\\n              <!-- <ng-container matColumnDef=\\\"fields\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Fields</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">\\r\\n                  <ng-template *ngFor=\\\"let field of observation.fields\\\">\\r\\n                    <span>{{field.title}}</span>\\r\\n                  </ng-template>\\r\\n                </mat-cell>\\r\\n              </ng-container> -->\\r\\n              <ng-container matColumnDef=\\\"tags\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Tags</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.tags}}</mat-cell>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"date\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.updatedTime}}</mat-cell>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">\\r\\n                  <button matTooltip=\\\"View Records\\\" mat-icon-button (click)=\\\"viewRecords(row)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>receipt</mat-icon>\\r\\n                  </button>\\r\\n                  <button matTooltip=\\\"Edit Observation\\\" mat-icon-button (click)=\\\"editObservation(row)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </button>\\r\\n                  <button matTooltip=\\\"Delete Observation\\\" mat-icon-button (click)=\\\"deleteObservation(row)\\\" color=\\\"warn\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n                </mat-cell>\\r\\n              </ng-container>\\r\\n\\r\\n              <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n              <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n            </mat-table>\\r\\n            <div class=\\\"mat-table_message\\\" *ngIf=\\\"!dataSource.hasItems\\\">No records found</div><!-- Message for empty data  -->\\r\\n            <div class=\\\"spinner-container\\\" *ngIf=\\\"dataSource.loading$ | async\\\">\\r\\n\\r\\n              <mat-spinner [diameter]=\\\"35\\\"></mat-spinner>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[3, 5, 10]\\\" [length]=\\\"dataSource.paginatorTotal$ | async\\\"\\r\\n              [showFirstLastButtons]=\\\"true\\\"></mat-paginator>\\r\\n            <!-- <mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"dataSource.loading$ | async\\\"></mat-spinner> -->\\r\\n\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!--Records Grid-->\\r\\n    <!-- <div fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" fxFlex=\\\"50\\\"\\r\\n        fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n  \\r\\n        <mat-toolbar class=\\\"cards-header\\\">\\r\\n          <h1 class=\\\"mat-headline center-align\\\">Records</h1>\\r\\n        </mat-toolbar>\\r\\n  \\r\\n        <div class=\\\"cards-container\\\">\\r\\n          <div class=\\\"formContainer\\\">\\r\\n            <form #createObservationForm=\\\"ngForm\\\">\\r\\n              <mat-card>\\r\\n  \\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\" style=\\\"font-size: 15px;\\\">\\r\\n\\r\\n                </mat-card-content>\\r\\n              </mat-card>\\r\\n            </form>\\r\\n          </div>\\r\\n  \\r\\n        </div>\\r\\n      </div> -->\\r\\n  </div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { ObservationService } from 'src/app/services/observation.service';\r\nimport { Observation } from 'src/app/models/observation.model';\r\nimport { MatPaginator, MatSort } from '@angular/material';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { merge, fromEvent } from 'rxjs';\r\nimport { tap, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ObservationDataSource } from 'src/app/services/observation.datasource';\r\n\r\n@Component({\r\n  selector: 'app-explore-observations',\r\n  templateUrl: './explore-observations.component.html',\r\n  styleUrls: ['./explore-observations.component.css']\r\n})\r\nexport class ExploreObservationsComponent implements OnInit {\r\n\r\n  observation: Observation[];\r\n\r\n  dataSource: ObservationDataSource;\r\n  accountId: string;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild('searchInput') searchInput: ElementRef;\r\n\r\n  // Columns which should view in table\r\n  displayedColumns = ['title', 'description', 'category', 'date', 'tags', 'actions'];\r\n\r\n  constructor(private observationService: ObservationService, \r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.accountId = currentUser['accountId'];\r\n\r\n    this.dataSource = new ObservationDataSource(this.observationService);\r\n    this.dataSource.loadObservations('', this.accountId, 0, 10, 'asc');\r\n\r\n    // If the user changes the sort order, reset back to the first page.\r\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n\r\n    /* Data load will be triggered in two cases:\r\n    - when a pagination event occurs => this.paginator.page\r\n    - when a sort event occurs => this.sort.sortChange\r\n    **/\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => { this.loadObservationList(); })\r\n      )\r\n      .subscribe();\r\n\r\n    // Filtration, bind to searchInput\r\n    fromEvent(this.searchInput.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(150), // The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator, we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n        distinctUntilChanged(), // This operator will eliminate duplicate values\r\n        tap(() => {\r\n          this.paginator.pageIndex = 0;\r\n          this.loadObservationList();\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n  }\r\n\r\n  loadObservationList() {\r\n    this.dataSource.loadObservations(this.searchInput.nativeElement['value'],\r\n      this.accountId,\r\n      this.paginator.pageIndex,\r\n      this.paginator.pageSize,\r\n      this.sort.direction)\r\n  }\r\n\r\n  viewRecords(observation){\r\n    // console.log(observation['observationId']);\r\n    this.router.navigateByUrl(`citizenpanel/listrecords/${observation['observationId']}`)\r\n  }\r\n\r\n  editObservation(observation){\r\n    this.router.navigateByUrl(`citizenpanel/updateobservation/${observation['observationId']}`)\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between stretch\\\" fxFlexFil fxFill class=\\\"components-container-gt-xs \\\">\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\" fxFlexFil fxFill fxLayoutGap=\\\"20px\\\">\\r\\n\\r\\n    <div fxFlex=\\\"65\\\" fxLayout=\\\"column\\\" class=\\\"mat-elevation-z2 record-list-container\\\" style=\\\"padding: 12px;\\\">\\r\\n\\r\\n      <div fxFlex=\\\"10\\\" fxLayoutAlign=\\\"start center\\\" fxLayout=\\\"row\\\">\\r\\n\\r\\n        <h3 class=\\\"mat-headline\\\">Observation Record</h3>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <mat-divider></mat-divider>\\r\\n\\r\\n      <div fxFlex=\\\"10\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\r\\n\\r\\n        <div fxflex=\\\"50\\\" class=\\\"full\\\">\\r\\n          <mat-form-field class=\\\"full\\\">\\r\\n            <input matInput placeholder=\\\"search\\\" #searchInput>\\r\\n            <mat-icon matSuffix>search</mat-icon>\\r\\n          </mat-form-field>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"30\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addRecord()\\\">Add Record</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <!-- \\r\\n      <div fxFlex=\\\"10\\\" class=\\\"record-list-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around stretch\\\">\\r\\n\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <mat-checkbox class=\\\"checkbox\\\"></mat-checkbox>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button mat-icon-button>\\r\\n            <mat-icon>sort</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button mat-icon-button>\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"80\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n\\r\\n          <button mat-raised-button>ADD TAGS</button>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div> -->\\r\\n      <div fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between stretch\\\" class=\\\"record-list-container\\\">\\r\\n\\r\\n        <div class=\\\"record-list\\\">\\r\\n          <perfect-scrollbar>\\r\\n            <mat-table class=\\\"lmat-elevation-z8\\\" [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"id\\\" matSortDirection=\\\"asc\\\"\\r\\n              matSortDisableClear style=\\\"height: 550px;\\\">\\r\\n              <!-- Material table HTML -->\\r\\n              <!-- <ng-container *ngFor=\\\"let rec of dataSource.records\\\">\\r\\n\\r\\n              </ng-container> -->\\r\\n              <ng-container matColumnDef=\\\"field\\\">\\r\\n\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Field</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let records\\\">{{records.fieldName}}</mat-cell>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"value\\\">\\r\\n\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Value</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let records\\\">{{records.fieldValue}}</mat-cell>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">\\r\\n                  <button matTooltip=\\\"Edit Records\\\" mat-icon-button (click)=\\\"editObservation(row)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </button>\\r\\n                  <button matTooltip=\\\"Delete Records\\\" mat-icon-button (click)=\\\"deleteObservation(row)\\\" color=\\\"warn\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n                </mat-cell>\\r\\n              </ng-container>\\r\\n\\r\\n              <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n              <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n            </mat-table>\\r\\n          </perfect-scrollbar>\\r\\n          <div class=\\\"mat-table_message\\\" *ngIf=\\\"!dataSource.hasItems\\\" style=\\\"margin-top: 12px;\\\">No records found</div><!-- Message for empty data  -->\\r\\n          <div class=\\\"spinner-container\\\" *ngIf=\\\"dataSource.loading$ | async\\\">\\r\\n\\r\\n            <mat-spinner [diameter]=\\\"35\\\"></mat-spinner>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[3, 5, 10]\\\" [length]=\\\"dataSource.paginatorTotal$ | async\\\"\\r\\n            [showFirstLastButtons]=\\\"true\\\"></mat-paginator>\\r\\n          <!-- <mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"dataSource.loading$ | async\\\"></mat-spinner> -->\\r\\n        </div>\\r\\n\\r\\n        <mat-divider></mat-divider>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- Observation details panel-->\\r\\n\\r\\n    <div fxFlex=\\\"35\\\" fxLayout=\\\"column\\\" class=\\\"mat-elevation-z2 record-add\\\">\\r\\n\\r\\n      <div fxFlex=\\\"10\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\">\\r\\n\\r\\n        <h3 class=\\\"mat-headline\\\" fxFlex>Observation Details</h3>\\r\\n\\r\\n      </div>\\r\\n      <mat-divider></mat-divider>\\r\\n\\r\\n      <div fxFlex=\\\"10\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <div fxFlex=\\\"40\\\">\\r\\n          <h3 class=\\\"mat-subheading-2 center-align\\\">Title</h3>\\r\\n\\r\\n        </div>\\r\\n        <div fxFlex=\\\"60\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n          <h3 class=\\\"mat-title\\\">{{observationDetails.title}}</h3>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n      <div fxFlex=\\\"10\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <div fxFlex=\\\"40\\\">\\r\\n          <h3 class=\\\"mat-subheading-2 center-align\\\">Description</h3>\\r\\n\\r\\n        </div>\\r\\n        <div fxFlex=\\\"60\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n          <h3 class=\\\"mat-title\\\">{{observationDetails.description}}</h3>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n      <div fxFlex=\\\"10\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <div fxFlex=\\\"40\\\">\\r\\n          <h3 class=\\\"mat-subheading-2 center-align\\\">Category</h3>\\r\\n\\r\\n        </div>\\r\\n        <div fxFlex=\\\"60\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n          <h3 class=\\\"mat-title\\\">{{observationDetails.category}}</h3>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\" style=\\\"margin-top: 10px;\\\">\\r\\n\\r\\n        <div>\\r\\n          <h3 class=\\\"mat-subheading-2 center-align\\\">Fields</h3>\\r\\n\\r\\n        </div>\\r\\n        <perfect-scrollbar>\\r\\n          <div style=\\\"width: 100%; height: 190px; overflow: visible; margin-bottom: 30px;\\\">\\r\\n            <mat-nav-list fxFlex>\\r\\n              <mat-list-item *ngFor=\\\"let field of observationDetails.fields\\\">\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"55px\\\" fxLayoutAlign=\\\"start space-around\\\">\\r\\n                  <span fxFlex=\\\"65px\\\">{{field.title}}</span>\\r\\n                  <span fxFlex=\\\"65px\\\">{{field.type}}</span>\\r\\n                </div>\\r\\n                <mat-divider></mat-divider>\\r\\n              </mat-list-item>\\r\\n\\r\\n            </mat-nav-list>\\r\\n          </div>\\r\\n        </perfect-scrollbar>\\r\\n      </div>\\r\\n\\r\\n      <mat-divider></mat-divider>\\r\\n      <div fxFlex=\\\"10\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\">\\r\\n\\r\\n        <div fxFlex=\\\"40\\\">\\r\\n          <h3 class=\\\"mat-subheading-2 center-align\\\">Tags</h3>\\r\\n\\r\\n        </div>\\r\\n        <div fxFlex=\\\"60\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n          <mat-chip-list *ngFor=\\\"let tag of observationDetails.tags\\\" style=\\\"box-sizing: border-box; padding-right: 5px;\\\">\\r\\n            <mat-chip color=\\\"primary\\\">{{tag}}</mat-chip>\\r\\n          </mat-chip-list>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <!-- <div fxFlex=\\\"10\\\" fxLayoutGap=\\\"10px\\\" fxLayout=\\\"row\\\" fxLayout.lt-lg=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n        <div fxFlex=\\\"50\\\" fxLayout.lt-lg=\\\"100\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"phone\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"50\\\" fxLayout.lt-lg=\\\"100\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Office\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div fxFlex=\\\"10\\\" fxLayoutGap=\\\"10px\\\" fxLayout=\\\"row\\\" fxLayout.lt-lg=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n        <div fxFlex=\\\"50\\\" fxLayout.lt-lg=\\\"100\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"skype\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"50\\\" fxLayout.lt-lg=\\\"100\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Email\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n      <div fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end flex-end\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\">Update</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\"","module.exports = \".full {\\n  width: 100%; }\\n\\n.record-list-container {\\n  background-color: white;\\n  padding: 10px; }\\n\\n.record-list-container .record-list {\\n    overflow: auto; }\\n\\n.record-list-container .record-list div {\\n      margin: 0; }\\n\\n.record-list-container .record-list h3 {\\n      margin: 0; }\\n\\n.record-list-container .record-list p {\\n      margin: 0; }\\n\\n.record-list-container .record-list .avatar {\\n      width: 40px;\\n      height: 40px;\\n      border-radius: 50%; }\\n\\n.record-list-container .record-list .spinner-container {\\n      margin-top: 50px; }\\n\\n.record-list-container .record-list .spinner-container mat-spinner {\\n      margin: auto; }\\n\\n.record-list-container .record-list .mat-table_message {\\n      text-align: center;\\n      opacity: 0.8; }\\n\\n.record-list-container .record-list-header {\\n    background-color: #eee;\\n    padding: 10px; }\\n\\n.record-list-container .record-list-header div {\\n      margin: auto; }\\n\\n.record-add {\\n  padding: 15px;\\n  background: white; }\\n\\n.record-add .avatar {\\n    width: 120px;\\n    height: 120px;\\n    border-radius: 50%; }\\n\\n.record-add h3 {\\n    margin: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZWFyY2hlci9saXN0LXJlY29yZHMvQzpcXFVzZXJzXFxNaW5oYXpcXERvY3VtZW50c1xcYW5ndWxhclRlc3RzXFxjaXRpemVuLWZyb250L3NyY1xcYXBwXFxyZXNlYXJjaGVyXFxsaXN0LXJlY29yZHNcXGxpc3QtcmVjb3Jkcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLFlBQVcsRUFDWDs7QUFDRDtFQUNDLHdCQUF1QjtFQUN2QixjQUFhLEVBdUNiOztBQXpDRDtJQUtFLGVBQWMsRUEwQmQ7O0FBL0JGO01BT0csVUFBUyxFQUNUOztBQVJIO01BVUcsVUFBUyxFQUNUOztBQVhIO01BYUcsVUFBUyxFQUNUOztBQWRIO01BZ0JHLFlBQVc7TUFDWCxhQUFZO01BQ1osbUJBQWtCLEVBQ2xCOztBQW5CSDtNQXFCRyxpQkFBZ0IsRUFDaEI7O0FBdEJIO01Bd0JHLGFBQVksRUFDWjs7QUF6Qkg7TUE0QkcsbUJBQWtCO01BQ2xCLGFBQVksRUFDWjs7QUE5Qkg7SUFrQ0UsdUJBQXNCO0lBQ3RCLGNBQWEsRUFLYjs7QUF4Q0Y7TUFxQ0csYUFBWSxFQUNaOztBQUlIO0VBQ0UsY0FBYTtFQUNiLGtCQUFpQixFQVNqQjs7QUFYRjtJQUlHLGFBQVk7SUFDWixjQUFhO0lBQ2IsbUJBQWtCLEVBQ2xCOztBQVBIO0lBU0csYUFBWSxFQUNaIiwiZmlsZSI6InNyYy9hcHAvcmVzZWFyY2hlci9saXN0LXJlY29yZHMvbGlzdC1yZWNvcmRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG59XHJcbi5yZWNvcmQtbGlzdC1jb250YWluZXIge1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG5cdHBhZGRpbmc6IDEwcHg7XHJcblxyXG5cdC5yZWNvcmQtbGlzdCB7XHJcblx0XHRvdmVyZmxvdzogYXV0bztcclxuXHRcdGRpdiB7XHJcblx0XHRcdG1hcmdpbjogMDtcclxuXHRcdH1cclxuXHRcdGgzIHtcclxuXHRcdFx0bWFyZ2luOiAwO1xyXG5cdFx0fVxyXG5cdFx0cCB7XHJcblx0XHRcdG1hcmdpbjogMDtcclxuXHRcdH1cclxuXHRcdC5hdmF0YXIge1xyXG5cdFx0XHR3aWR0aDogNDBweDtcclxuXHRcdFx0aGVpZ2h0OiA0MHB4O1xyXG5cdFx0XHRib3JkZXItcmFkaXVzOiA1MCU7XHJcblx0XHR9XHJcblx0XHQuc3Bpbm5lci1jb250YWluZXJ7XHJcblx0XHRcdG1hcmdpbi10b3A6IDUwcHg7XHJcblx0XHR9XHJcblx0XHQuc3Bpbm5lci1jb250YWluZXIgbWF0LXNwaW5uZXIge1xyXG5cdFx0XHRtYXJnaW46IGF1dG87XHJcblx0XHR9XHJcblxyXG5cdFx0Lm1hdC10YWJsZV9tZXNzYWdle1xyXG5cdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0XHRcdG9wYWNpdHk6IDAuODtcclxuXHRcdH1cclxuXHR9XHJcblx0XHJcblx0LnJlY29yZC1saXN0LWhlYWRlciB7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xyXG5cdFx0cGFkZGluZzogMTBweDtcclxuXHRcdGRpdiB7XHJcblx0XHRcdG1hcmdpbjogYXV0bztcclxuXHRcdH1cclxuXHRcdFxyXG5cdH1cclxufVxyXG4ucmVjb3JkLWFkZCB7XHJcblx0XHRwYWRkaW5nOiAxNXB4O1xyXG5cdFx0YmFja2dyb3VuZDogd2hpdGU7XHJcblx0XHQuYXZhdGFyIHtcclxuXHRcdFx0d2lkdGg6IDEyMHB4O1xyXG5cdFx0XHRoZWlnaHQ6IDEyMHB4O1xyXG5cdFx0XHRib3JkZXItcmFkaXVzOiA1MCU7XHJcblx0XHR9XHJcblx0XHRoMyB7XHJcblx0XHRcdG1hcmdpbjogYXV0bztcclxuXHRcdH1cclxuXHR9XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, ActivatedRoute, Router } from '@angular/router';\r\nimport { Observation } from 'src/app/models/observation.model';\r\nimport { Fields } from 'src/app/models/field.model';\r\nimport { RecordDataSource } from 'src/app/services/record.datasource';\r\nimport { MatSort, MatPaginator } from '@angular/material';\r\nimport { RecordService } from 'src/app/services/record.service';\r\nimport { merge, fromEvent } from 'rxjs';\r\nimport { tap, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-list-records',\r\n  templateUrl: './list-records.component.html',\r\n  styleUrls: ['./list-records.component.scss']\r\n})\r\nexport class ListRecordsComponent implements OnInit {\r\n\r\n  observationDetails: Observation;\r\n  data: any;\r\n  fields: any;\r\n  checked = false;\r\n  indeterminate = false;\r\n  dataSource: RecordDataSource;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild('searchInput') searchInput: ElementRef;\r\n\r\n  displayedColumns = ['field', 'value', 'actions'];\r\n\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router,\r\n    private recordService: RecordService) {\r\n\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.observationDetails = new Observation();\r\n    this.observationDetails = this.route.snapshot.data.data.observations[0];\r\n\r\n    this.dataSource = new RecordDataSource(this.recordService);\r\n    this.dataSource.loadRecords(this.observationDetails.observationId, 0, 10, '')\r\n\r\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n\r\n    // console.log(this.observationDetails);\r\n\r\n    /* Data load will be triggered in two cases:\r\n- when a pagination event occurs => this.paginator.page\r\n- when a sort event occurs => this.sort.sortChange\r\n**/\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => { this.loadRecordsList(); })\r\n      )\r\n      .subscribe();\r\n\r\n    // Filtration, bind to searchInput\r\n    fromEvent(this.searchInput.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(150), // The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator, we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n        distinctUntilChanged(), // This operator will eliminate duplicate values\r\n        tap(() => {\r\n          this.paginator.pageIndex = 0;\r\n          this.loadRecordsList();\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n  };\r\n\r\n  loadRecordsList() {\r\n    this.dataSource.loadRecords(this.observationDetails.observationId, \r\n      this.paginator.pageIndex, \r\n      this.paginator.pageSize, \r\n      this.searchInput.nativeElement['value']);\r\n  }\r\n\r\n  addRecord() {\r\n    this.router.navigateByUrl(`citizenpanel/addrecord/${this.observationDetails.observationId}`);\r\n  };\r\n\r\n}\r\n","module.exports = \".cards-header {\\r\\n    background-color: #327ebd;\\r\\n    color: white;\\r\\n    padding: 12px;\\r\\n}\\r\\n\\r\\n.cards-container {\\r\\n    padding: 19px;\\r\\n}\\r\\n\\r\\n.cdk-card-holder {\\r\\n    border: 1px solid #327ebd;\\r\\n    background-color: white;\\r\\n    border-top-left-radius: 5px;\\r\\n    border-top-right-radius: 5px;\\r\\n}\\r\\n\\r\\n.listHeader, .listItems {\\r\\n    border: 3px solid lightgray;\\r\\n    border-radius: 5px;\\r\\n    padding: 12px;\\r\\n}\\r\\n\\r\\n.observation-table {\\r\\n    min-height: 360px;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.spinner-container{\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\\r\\n.spinner-container mat-spinner {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.mat-table_message{\\r\\n    text-align: center;\\r\\n    opacity: 0.8;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZWFyY2hlci9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDBCQUEwQjtJQUMxQixhQUFhO0lBQ2IsY0FBYztDQUNqQjs7QUFFRDtJQUNJLGNBQWM7Q0FDakI7O0FBRUQ7SUFDSSwwQkFBMEI7SUFDMUIsd0JBQXdCO0lBQ3hCLDRCQUE0QjtJQUM1Qiw2QkFBNkI7Q0FDaEM7O0FBRUQ7SUFDSSw0QkFBNEI7SUFDNUIsbUJBQW1CO0lBQ25CLGNBQWM7Q0FDakI7O0FBRUQ7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0NBQ3BCOztBQUVEO0lBQ0ksaUJBQWlCO0NBQ3BCOztBQUNEO0lBQ0ksYUFBYTtDQUNoQjs7QUFFRDtJQUNJLG1CQUFtQjtJQUNuQixhQUFhO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvcmVzZWFyY2hlci9saXN0L2xpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkcy1oZWFkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMyN2ViZDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEycHg7XHJcbn1cclxuXHJcbi5jYXJkcy1jb250YWluZXIge1xyXG4gICAgcGFkZGluZzogMTlweDtcclxufVxyXG5cclxuLmNkay1jYXJkLWhvbGRlciB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMzI3ZWJkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA1cHg7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNXB4O1xyXG59XHJcblxyXG4ubGlzdEhlYWRlciwgLmxpc3RJdGVtcyB7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCBsaWdodGdyYXk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG59XHJcblxyXG4ub2JzZXJ2YXRpb24tdGFibGUge1xyXG4gICAgbWluLWhlaWdodDogMzYwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4uc3Bpbm5lci1jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcbi5zcGlubmVyLWNvbnRhaW5lciBtYXQtc3Bpbm5lciB7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi5tYXQtdGFibGVfbWVzc2FnZXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG9wYWNpdHk6IDAuODtcclxufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"components-container-gt-xs\\\" fxLayoutGap=\\\"20px\\\" >\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" fxFlex\\r\\n      fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n\\r\\n      <mat-toolbar class=\\\"cards-header\\\">\\r\\n        <h1 class=\\\"mat-headline center-align\\\">Observations List</h1>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"cards-container\\\">\\r\\n\\r\\n        <mat-card>\\r\\n\\r\\n          <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\" style=\\\"font-size: 15px;\\\">\\r\\n            <mat-form-field style=\\\"max-width: 35%;\\\">\\r\\n\\r\\n              <input matTooltip=\\\"Search by title, tags\\\" matInput placeholder=\\\"Search observations\\\" #searchInput>\\r\\n\\r\\n            </mat-form-field>\\r\\n\\r\\n            <!-- <div class=\\\"spinner-container\\\" *ngIf=\\\"dataSource.loading$ | async\\\">\\r\\n\\r\\n              <mat-spinner [diameter]=\\\"35\\\"></mat-spinner>\\r\\n\\r\\n            </div> -->\\r\\n\\r\\n            <mat-table class=\\\"lmat-elevation-z8\\\" [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"id\\\" matSortDirection=\\\"asc\\\"\\r\\n              matSortDisableClear>\\r\\n              <!-- Material table HTML -->\\r\\n              <ng-container matColumnDef=\\\"title\\\">\\r\\n                <!-- ATTRIBUTE mat-sort-header  for sorting | https://material.angular.io/components/sort/overview -->\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Title</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.title}}</mat-cell>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"description\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Description</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.description}}</mat-cell>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"category\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Category</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.category}}</mat-cell>\\r\\n              </ng-container>\\r\\n              <!-- <ng-container matColumnDef=\\\"fields\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Fields</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">\\r\\n                  <ng-template *ngFor=\\\"let field of observation.fields\\\">\\r\\n                    <span>{{field.title}}</span>\\r\\n                  </ng-template>\\r\\n                </mat-cell>\\r\\n              </ng-container> -->\\r\\n              <ng-container matColumnDef=\\\"tags\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Tags</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.tags}}</mat-cell>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"date\\\">\\r\\n                \\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let observation\\\">{{observation.updatedTime}}</mat-cell>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">\\r\\n                  <button matTooltip=\\\"View Records\\\" mat-icon-button (click)=\\\"viewRecords(row)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>receipt</mat-icon>\\r\\n                  </button>\\r\\n                  <button matTooltip=\\\"Edit Observation\\\" mat-icon-button (click)=\\\"editObservation(row)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                  </button>\\r\\n                  <button matTooltip=\\\"Delete Observation\\\" mat-icon-button (click)=\\\"deleteObservation(row)\\\" color=\\\"warn\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n                </mat-cell>\\r\\n              </ng-container>\\r\\n\\r\\n              <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n              <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n            </mat-table>\\r\\n            <div class=\\\"mat-table_message\\\" *ngIf=\\\"!dataSource.hasItems\\\">No records found</div><!-- Message for empty data  -->\\r\\n            <div class=\\\"spinner-container\\\" *ngIf=\\\"dataSource.loading$ | async\\\">\\r\\n\\r\\n              <mat-spinner [diameter]=\\\"35\\\"></mat-spinner>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[3, 5, 10]\\\" [length]=\\\"dataSource.paginatorTotal$ | async\\\"\\r\\n              [showFirstLastButtons]=\\\"true\\\"></mat-paginator>\\r\\n            <!-- <mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"dataSource.loading$ | async\\\"></mat-spinner> -->\\r\\n\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!--Records Grid-->\\r\\n    <!-- <div fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" fxFlex=\\\"50\\\"\\r\\n        fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n  \\r\\n        <mat-toolbar class=\\\"cards-header\\\">\\r\\n          <h1 class=\\\"mat-headline center-align\\\">Records</h1>\\r\\n        </mat-toolbar>\\r\\n  \\r\\n        <div class=\\\"cards-container\\\">\\r\\n          <div class=\\\"formContainer\\\">\\r\\n            <form #createObservationForm=\\\"ngForm\\\">\\r\\n              <mat-card>\\r\\n  \\r\\n                <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\" style=\\\"font-size: 15px;\\\">\\r\\n\\r\\n                </mat-card-content>\\r\\n              </mat-card>\\r\\n            </form>\\r\\n          </div>\\r\\n  \\r\\n        </div>\\r\\n      </div> -->\\r\\n  </div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { ObservationService } from 'src/app/services/observation.service';\r\nimport { Observation } from 'src/app/models/observation.model';\r\nimport { MatPaginator, MatSort } from '@angular/material';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { merge, fromEvent } from 'rxjs';\r\nimport { tap, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ObservationDataSource } from 'src/app/services/observation.datasource';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  observation: Observation[];\r\n\r\n  dataSource: ObservationDataSource;\r\n  accountId: string;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild('searchInput') searchInput: ElementRef;\r\n\r\n  // Columns which should view in table\r\n  displayedColumns = ['title', 'description', 'category', 'date', 'tags', 'actions'];\r\n\r\n  constructor(private observationService: ObservationService, \r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.accountId = currentUser['accountId'];\r\n\r\n    this.dataSource = new ObservationDataSource(this.observationService);\r\n    this.dataSource.loadObservations('', this.accountId, 0, 10, 'asc');\r\n\r\n    // If the user changes the sort order, reset back to the first page.\r\n    this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n\r\n    /* Data load will be triggered in two cases:\r\n    - when a pagination event occurs => this.paginator.page\r\n    - when a sort event occurs => this.sort.sortChange\r\n    **/\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => { this.loadObservationList(); })\r\n      )\r\n      .subscribe();\r\n\r\n    // Filtration, bind to searchInput\r\n    fromEvent(this.searchInput.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(150), // The user can type quite quickly in the input box, and that could trigger a lot of server requests. With this operator, we are limiting the amount of server requests emitted to a maximum of one every 150ms\r\n        distinctUntilChanged(), // This operator will eliminate duplicate values\r\n        tap(() => {\r\n          this.paginator.pageIndex = 0;\r\n          this.loadObservationList();\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n  }\r\n\r\n  loadObservationList() {\r\n    this.dataSource.loadObservations(this.searchInput.nativeElement['value'],\r\n      this.accountId,\r\n      this.paginator.pageIndex,\r\n      this.paginator.pageSize,\r\n      this.sort.direction)\r\n  }\r\n\r\n  viewRecords(observation){\r\n    // console.log(observation['observationId']);\r\n    this.router.navigateByUrl(`citizenpanel/listrecords/${observation['observationId']}`)\r\n  }\r\n\r\n  editObservation(observation){\r\n    this.router.navigateByUrl(`citizenpanel/updateobservation/${observation['observationId']}`)\r\n  }\r\n\r\n}\r\n","module.exports = \"<!-- <mat-sidenav-container class=\\\"container\\\" fullscreen>\\r\\n    <mat-sidenav [mode]=\\\"sideNavMode\\\" class=\\\"sidenav\\\" #sidenav [opened]=\\\"sideNavOpened\\\" style=\\\"overflow: hidden;\\\">\\r\\n        <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z4\\\">\\r\\n            <img src=\\\"./assets/logo.codetok.png\\\" width=\\\"36px\\\">\\r\\n            <h1 class=\\\"logo\\\">\\r\\n                CODETOK.\\r\\n                <span style=\\\"font-size: 12px;\\\">com</span>\\r\\n            </h1>\\r\\n        </mat-toolbar>\\r\\n\\r\\n        <cdk-sidemenu></cdk-sidemenu>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n        <cdk-toolbar [sidenav]=\\\"sidenav\\\" [drawer]=\\\"drawer\\\" [sidebar]=\\\"sidenav2\\\" [matDrawerShow]=\\\"matDrawerShow\\\" style=\\\"z-index: 500\\\"></cdk-toolbar>\\r\\n        <perfect-scrollbar>\\r\\n            <router-outlet></router-outlet>\\r\\n        </perfect-scrollbar>\\r\\n    </mat-sidenav-content>\\r\\n    <mat-sidenav #sidenav2 position=\\\"end\\\" mode=\\\"over\\\">\\r\\n        <cdk-sidebar></cdk-sidebar>\\r\\n    </mat-sidenav>\\r\\n</mat-sidenav-container> -->\\r\\n        \\r\\n <!-- Below is another example of the home page that has a smaller menu that shows up when the main menu is hidden -->\\r\\n\\r\\n <mat-sidenav-container class=\\\"container\\\" fullscreen>\\r\\n  <mat-sidenav [mode]=\\\"sideNavMode\\\" class=\\\"sidenav\\\" #sidenav [opened]=\\\"sideNavOpened\\\" style=\\\"overflow: hidden;\\\">\\r\\n      <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z4\\\">\\r\\n          <!-- <img src=\\\"./assets/logo.codetok.png\\\" width=\\\"36px\\\"> -->\\r\\n          <h1 class=\\\"logo\\\">\\r\\n              Citizen App\\r\\n              <!-- <span style=\\\"font-size: 12px;\\\">com</span> -->\\r\\n          </h1> \\r\\n      </mat-toolbar>\\r\\n      <cdk-sidemenu></cdk-sidemenu>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content style=\\\"z-index: unset;overflow: hidden;\\\">\\r\\n      <mat-drawer-container fullscreen style=\\\"background-color: #f5f5f5;\\\">\\r\\n          <mat-drawer mode=\\\"side\\\" #drawer class=\\\"drawer\\\" [opened]=\\\"matDrawerOpened\\\" style=\\\"overflow: hidden;\\\">\\r\\n              <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z4\\\">\\r\\n                  <!-- <img src=\\\"./assets/logo.codetok.png\\\" width=\\\"36px\\\"> -->\\r\\n              </mat-toolbar>\\r\\n              <cdk-sidemenu [iconOnly]=\\\"true\\\"></cdk-sidemenu>\\r\\n          </mat-drawer>\\r\\n          <mat-drawer-content style=\\\"overflow: hidden;\\\">\\r\\n\\r\\n              <cdk-toolbar [sidenav]=\\\"sidenav\\\" [drawer]=\\\"drawer\\\" [sidebar]=\\\"sidenav2\\\" [matDrawerShow]=\\\"matDrawerShow\\\" style=\\\"z-index: 500\\\"></cdk-toolbar>\\r\\n\\r\\n\\r\\n              <perfect-scrollbar  style=\\\"height: calc(100% - 33px);\\\" [config]=\\\"config\\\" >\\r\\n                  <router-outlet></router-outlet>\\r\\n              </perfect-scrollbar>\\r\\n\\r\\n         \\r\\n          </mat-drawer-content>\\r\\n      </mat-drawer-container>\\r\\n  </mat-sidenav-content>\\r\\n\\r\\n  <!-- <mat-sidenav #sidenav2 position=\\\"end\\\" mode=\\\"over\\\">\\r\\n      <cdk-sidebar></cdk-sidebar>\\r\\n  </mat-sidenav> -->\\r\\n\\r\\n</mat-sidenav-container>\\r\\n               \\r\\n          \\r\\n          \\r\\n  \\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".cards-header {\\n  background-color: #327ebd;\\n  color: white;\\n  padding: 0 5px; }\\n\\n.cards-container {\\n  padding: 5px; }\\n\\n.cdk-card-holder {\\n  border: 1px solid #327ebd;\\n  background-color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZWFyY2hlci9DOlxcVXNlcnNcXE1pbmhhelxcRG9jdW1lbnRzXFxhbmd1bGFyVGVzdHNcXGNpdGl6ZW4tZnJvbnQvc3JjXFxhcHBcXHJlc2VhcmNoZXJcXHJlc2VhcmNoZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0NBO0VBQ0ksMEJBQXlCO0VBQ3pCLGFBQVk7RUFDWixlQUFjLEVBQ2pCOztBQUNEO0VBQ0ksYUFBWSxFQUVmOztBQUVEO0VBQ0MsMEJBQXlCO0VBQ3pCLHdCQUF1QixFQUN2QiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VhcmNoZXIvcmVzZWFyY2hlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuQG1peGluIGF1dGgoJHRoZW1lKSB7XHJcbiAgJHByaW1hcnk6IG1hcC1nZXQoJHRoZW1lLCBwcmltYXJ5KTtcclxuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcclxuICAkd2FybjogbWFwLWdldCgkdGhlbWUsIHdhcm4pO1xyXG5cclxuICBcclxuICAuc2lkZW5hdntcclxuICAgICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKCRwcmltYXJ5LDQwMCk7ICAgIFxyXG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHdpZHRoOiAyNTBweDtcclxuICB9XHJcbiAgLmRyYXdlcntcclxuICAgICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKCRwcmltYXJ5LDQwMCk7ICAgIFxyXG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHdpZHRoOiA4MHB4O1xyXG4gIH1cclxuICBbbm8tb3Zlci1mbG93XSB7XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfVxyXG4gIC5yb3V0ZXItb3V0bGV0e1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7cGFkZGluZzogMHB4IDVweDtcclxuICB9XHJcbiAgLnNwYWNlciB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgLmxvZ297XHJcbiAgICAgIGZvbnQtc2l6ZTogMjZweDtmb250LWZhbWlseTogUm9ib3RvO2NvbG9yOndoaXRlO21hcmdpbi10b3A6IDhweDtcclxuICB9XHJcbn1cclxuXHJcbi8vIGNkay1jYXJkcyB7XHJcbi5jYXJkcy1oZWFkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMyN2ViZDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDAgNXB4O1xyXG59XHJcbi5jYXJkcy1jb250YWluZXIge1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgLy8gY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uY2RrLWNhcmQtaG9sZGVyIHtcclxuXHRib3JkZXI6IDFweCBzb2xpZCAjMzI3ZWJkO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59Il19 */\"","import { Component, OnInit ,Input} from '@angular/core';\r\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\r\n\r\n@Component({\r\n  selector: 'app-researcher',\r\n  templateUrl: './researcher.component.html',\r\n  styleUrls: ['./researcher.component.scss'],\r\n})\r\nexport class ResearcherComponent implements OnInit{\r\n  /** Based on the screen size, switch from standard to one column per row */\r\n  @Input() isVisible: boolean = true;\r\n  visibility = 'shown';\r\n\r\n  sideNavOpened: boolean = true;\r\n  matDrawerOpened: boolean = false;\r\n  matDrawerShow: boolean = true;\r\n  sideNavMode: string = 'side';\r\n\r\n\r\n  ngOnChanges() {\r\n    this.visibility = this.isVisible ? 'shown' : 'hidden';\r\n  }\r\n\r\n  constructor(private media: ObservableMedia) { }\r\n\r\n  ngOnInit() {\r\n    this.media.subscribe((mediaChange: MediaChange) => {\r\n      this.toggleView();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.sideNavOpened = true;\r\n  // matDrawerOpened: boolean = false;\r\n  // matDrawerShow: boolean = true;\r\n  // sideNavMode: string = 'side';\r\n    \r\n  }\r\n  getRouteAnimation(outlet) {\r\n\r\n    return outlet.activatedRouteData.animation;\r\n    //return outlet.isActivated ? outlet.activatedRoute : ''\r\n  }\r\n\r\n  toggleView() {\r\n    if (this.media.isActive('gt-md')) {\r\n      this.sideNavMode = 'side';\r\n      this.sideNavOpened = true;\r\n      this.matDrawerOpened = false;\r\n      this.matDrawerShow = true;\r\n    } else if (this.media.isActive('gt-xs')) {\r\n      this.sideNavMode = 'side';\r\n      this.sideNavOpened = false;\r\n      this.matDrawerOpened = true;\r\n      this.matDrawerShow = true;\r\n    } else if (this.media.isActive('lt-sm')) {\r\n      this.sideNavMode = 'over';\r\n      this.sideNavOpened = false;\r\n      this.matDrawerOpened = false;\r\n      this.matDrawerShow = false;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResearcherComponent } from './researcher.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule, MatCardModule, MatFormFieldModule, MatInputModule, MatChipsModule, MatTooltipModule, MatSelectModule, MatListModule, MatTableModule, MatProgressSpinnerModule, MatPaginatorModule, MatSortModule, MatCheckboxModule } from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { PerfectScrollbarModule, PerfectScrollbarConfigInterface,\r\n    PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\n\r\nimport { appRoutes } from './researcher.router';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { CreateObservationComponent } from './create-observation/create-observation.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AddFieldsComponent } from './add-fields/add-fields.component';\r\nimport { ObservationService } from '../services/observation.service';\r\nimport { ListComponent } from './list/list.component';\r\n\r\nimport { DataTableModule } from 'primeng/primeng';\r\nimport { ListRecordsComponent } from './list-records/list-records.component';\r\nimport { RecordResolver } from '../resolvers/record.resolver';\r\nimport { AddRecordsComponent } from './add-records/add-records.component';\r\nimport { RecordService } from '../services/record.service';\r\nimport { UpdateObservationComponent } from './update-observation/update-observation.component';\r\nimport { ExploreObservationsComponent } from './explore-observations/explore-observations.component';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n    suppressScrollX: true,\r\n    wheelPropagation: true\r\n};\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        \r\n        RouterModule.forChild(appRoutes),\r\n\r\n        MatToolbarModule,\r\n        FlexLayoutModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTabsModule,\r\n        CoreModule,\r\n        MatSidenavModule,\r\n        PerfectScrollbarModule,\r\n        MatCardModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatChipsModule,\r\n        MatTooltipModule,\r\n        MatSelectModule,\r\n        MatListModule,\r\n        DataTableModule,\r\n        MatTableModule,\r\n        MatProgressSpinnerModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatCheckboxModule\r\n    ],\r\n    declarations: [\r\n        ResearcherComponent, \r\n        CreateObservationComponent, \r\n        AddFieldsComponent, \r\n        ListComponent, \r\n        ListRecordsComponent,\r\n        AddRecordsComponent,\r\n        UpdateObservationComponent,\r\n        ExploreObservationsComponent\r\n    ],\r\n    exports: [ResearcherComponent, RouterModule],\r\n    providers: [\r\n        {\r\n            provide: PERFECT_SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        }, ObservationService, RecordService, RecordResolver\r\n    ]\r\n})\r\nexport class ResearcherModule {\r\n    \r\n }\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { ResearcherComponent } from './researcher.component';\r\nimport { CreateObservationComponent } from './create-observation/create-observation.component';\r\nimport { AddFieldsComponent } from './add-fields/add-fields.component';\r\nimport { NotFoundComponent } from '../not-found/not-found.component';\r\nimport { AuthGuard } from '../services/auth-guard.service';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ListRecordsComponent } from './list-records/list-records.component';\r\nimport { RecordResolver } from '../resolvers/record.resolver';\r\nimport { AddRecordsComponent } from './add-records/add-records.component';\r\nimport { UpdateObservationComponent } from './update-observation/update-observation.component';\r\nimport { ExploreObservationsComponent } from './explore-observations/explore-observations.component';\r\n//import { DashboardCrmComponent } from '../dashboard-crm/dashboard-crm.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    {\r\n        path: 'citizenpanel', component: ResearcherComponent, children: [\r\n            { path: 'createobservation', component: CreateObservationComponent },\r\n            { path: 'addfields/:id', component: AddFieldsComponent},\r\n            { path: 'list', component: ListComponent},\r\n            { path: 'explore', component: ExploreObservationsComponent},\r\n            { path: 'updateobservation/:id', component: UpdateObservationComponent, resolve:{ data: RecordResolver}},\r\n            { path: 'listrecords/:id', component: ListRecordsComponent, resolve:{ data: RecordResolver}},\r\n            { path: 'addrecord/:id', component: AddRecordsComponent, resolve:{ data: RecordResolver}},\r\n            { path: '**', redirectTo: '/citizenpanel'}\r\n        ], canActivate: [AuthGuard]\r\n    }];","module.exports = \".cards-header {\\r\\n    background-color: #327ebd;\\r\\n    color: white;\\r\\n    padding: 12px;\\r\\n}\\r\\n.cards-container {\\r\\n    padding: 19px;\\r\\n    color: white;\\r\\n}\\r\\n.cdk-card-holder {\\r\\nborder: 1px solid #327ebd;\\r\\nbackground-color: white;\\r\\nborder-top-left-radius: 5px;\\r\\nborder-top-right-radius: 5px;\\r\\n}\\r\\n.listHeader, .listItems{\\r\\nborder: 3px solid lightgray;\\r\\nborder-radius: 5px;\\r\\npadding: 12px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZWFyY2hlci91cGRhdGUtb2JzZXJ2YXRpb24vdXBkYXRlLW9ic2VydmF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQkFBMEI7SUFDMUIsYUFBYTtJQUNiLGNBQWM7Q0FDakI7QUFDRDtJQUNJLGNBQWM7SUFDZCxhQUFhO0NBQ2hCO0FBRUQ7QUFDQSwwQkFBMEI7QUFDMUIsd0JBQXdCO0FBQ3hCLDRCQUE0QjtBQUM1Qiw2QkFBNkI7Q0FDNUI7QUFFRDtBQUNBLDRCQUE0QjtBQUM1QixtQkFBbUI7QUFDbkIsY0FBYztDQUNiIiwiZmlsZSI6InNyYy9hcHAvcmVzZWFyY2hlci91cGRhdGUtb2JzZXJ2YXRpb24vdXBkYXRlLW9ic2VydmF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHMtaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMjdlYmQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG59XHJcbi5jYXJkcy1jb250YWluZXIge1xyXG4gICAgcGFkZGluZzogMTlweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmNkay1jYXJkLWhvbGRlciB7XHJcbmJvcmRlcjogMXB4IHNvbGlkICMzMjdlYmQ7XHJcbmJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG5ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA1cHg7XHJcbmJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi5saXN0SGVhZGVyLCAubGlzdEl0ZW1ze1xyXG5ib3JkZXI6IDNweCBzb2xpZCBsaWdodGdyYXk7XHJcbmJvcmRlci1yYWRpdXM6IDVweDtcclxucGFkZGluZzogMTJweDtcclxufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"components-container-gt-xs\\\" fxLayoutGap=\\\"20px\\\">\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n    <div fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" fxFlex=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n\\r\\n      <mat-toolbar class=\\\"cards-header\\\">\\r\\n        <h1 class=\\\"mat-headline center-align\\\">Update Observation details</h1>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"cards-container\\\">\\r\\n        <div class=\\\"formContainer\\\">\\r\\n          <form #updateObservationForm=\\\"ngForm\\\" (ngSubmit)=\\\"onUpdateObservation(updateObservationForm.value)\\\">\\r\\n            <mat-card>\\r\\n              <!-- <fieldset [disabled]=\\\"disableObservationForm\\\" style=\\\"border: 0;\\\" [style.opacity]=\\\"disabledOpacity\\\"> -->\\r\\n              <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\" style=\\\"font-size: 15px;\\\">\\r\\n\\r\\n                <mat-form-field>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel #title=\\\"ngModel\\\"\\r\\n                    required  [(ngModel)]=\\\"observationDetails.title\\\">\\r\\n                  <mat-hint *ngIf=\\\"!title.touched && !title.valid\\\">Please enter the title of observation</mat-hint>\\r\\n                  <mat-error *ngIf=\\\"title.errors?.required\\\">\\r\\n                    Title is <strong>required</strong>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field>\\r\\n                  <input matInput placeholder=\\\"Description\\\" name=\\\"description\\\" ngModel\\r\\n                    #description=\\\"ngModel\\\" required [(ngModel)]=\\\"observationDetails.description\\\">\\r\\n                  <mat-hint *ngIf=\\\"!description.touched && !description.valid\\\">Please enter the description of observation</mat-hint>\\r\\n                  <mat-error *ngIf=\\\"description.errors?.required\\\">\\r\\n                    Description is <strong>required</strong>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n                <!-- <div class=\\\"formInputGroup\\\" style=\\\"display:flex; flex-direction: row;\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Tags\\\">\\r\\n                  </mat-form-field>\\r\\n\\r\\n                  <button mat-icon-button color=\\\"primary\\\">\\r\\n                    <mat-icon style=\\\"font-size: 35px; margin-top: 12px;\\\">add_circle</mat-icon>\\r\\n                  </button>\\r\\n                </div> -->\\r\\n                <!-- <mat-form-field>\\r\\n                  <mat-chip-list #tagList>\\r\\n                    <ng-container *ngFor=\\\"let tag of tags\\\">\\r\\n                      <mat-chip [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\" (removed)=\\\"remove(tag)\\\" color=\\\"primary\\\">\\r\\n                        {{tag}}\\r\\n                        <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                      </mat-chip>\\r\\n                    </ng-container>\\r\\n                    <input placeholder=\\\"Tags for observation\\\" [matChipInputFor]=\\\"tagList\\\"\\r\\n                      [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n                      (matChipInputTokenEnd)=\\\"add($event)\\\" matTooltip=\\\"Press enter or comma for tags\\\">\\r\\n                  </mat-chip-list>\\r\\n                </mat-form-field> -->\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Tags\\\" name=\\\"tagVal\\\" [(ngModel)]=\\\"tagVal\\\">\\r\\n                    <!-- <mat-hint *ngIf=\\\"!tags.touched && tags.length === 0\\\">Please enter tags</mat-hint> -->\\r\\n                  </mat-form-field>\\r\\n                  <button color=\\\"primary\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"addTag(tagVal)\\\">\\r\\n                    <mat-icon style=\\\"font-size: 35px; margin-top: 22px;\\\">add_circle</mat-icon>\\r\\n                  </button>\\r\\n\\r\\n                </div>\\r\\n                <mat-nav-list>\\r\\n                  <div *ngIf=\\\"fields.length > 0\\\" class=\\\"listHeader\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"55px\\\" fxLayoutAlign=\\\"start space-around \\\">\\r\\n                    <span>Tags</span>\\r\\n                  </div>\\r\\n                  <mat-list-item *ngFor=\\\"let tag of tags\\\">\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"55px\\\" fxLayoutAlign=\\\"start space-around\\\" style=\\\"margin-top:7px;\\\"\\r\\n                      fxFlex=\\\"1 1 auto\\\">\\r\\n                      <span fxFlex=\\\"65px\\\">{{tag}}</span>\\r\\n                      <div style=\\\"position:relative; top: -10px;\\\">\\r\\n                        <button color=\\\"primary\\\" mat-icon-button (click)=\\\"removeTag(tag)\\\">\\r\\n                          <mat-icon>delete</mat-icon>\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </mat-list-item>\\r\\n                </mat-nav-list>\\r\\n  \\r\\n              </mat-card-content>\\r\\n              <div style=\\\"margin-bottom: 25px;\\\">\\r\\n                <mat-divider></mat-divider>\\r\\n              </div>\\r\\n              <mat-card-actions style=\\\"text-align: right; padding: 10px;\\\">\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"accent\\\" (click)=\\\"cancelField()\\\">Cancel</button>\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"primary\\\" [disabled]=\\\"updateObservationForm.invalid && fields.length == 0\\\"\\r\\n                  type=\\\"submit\\\">Update</button>\\r\\n              </mat-card-actions>\\r\\n              <!-- </fieldset> -->\\r\\n            </mat-card>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--Manual Record Selection Page-->\\r\\n    <!-- <div fxFlex.sm=\\\"100\\\" class=\\\"cdk-card-holder\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\" fxFlex=\\\"50\\\"\\r\\n      fxFlex.md=\\\"50\\\" fxFlex.sm=\\\"100\\\">\\r\\n\\r\\n      <mat-toolbar class=\\\"cards-header\\\">\\r\\n        <h1 class=\\\"mat-headline center-align\\\">Update Fields</h1>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"cards-container\\\">\\r\\n        <div class=\\\"formContainer\\\">\\r\\n          <form #addFieldsFrom=\\\"ngForm\\\" (ngSubmit)=\\\"updateObservation(updateObservationForm, addFieldsFrom)\\\" novalidate>\\r\\n            <mat-card>\\r\\n\\r\\n              <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"35px\\\" style=\\\"font-size: 15px;\\\">\\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Title\\\" name=\\\"fieldTitle\\\" ngModel #fieldTitle=\\\"ngModel\\\" required >\\r\\n                    <mat-hint *ngIf=\\\"!fieldTitle.touched && fields.length === 0\\\">Please enter the field title</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"fields.length === 0 && fieldTitle.errors?.required\\\">\\r\\n                      At least one field is <strong>required</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n\\r\\n\\r\\n                    <mat-select placeholder=\\\"Field Type\\\" name=\\\"fieldType\\\" ngModel #fieldType=\\\"ngModel\\\" required >\\r\\n                      <mat-option *ngFor=\\\"let field of fieldsType | keyvalue\\\" [value]=\\\"field\\\">\\r\\n                        {{field.key}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-hint *ngIf=\\\"!fieldType.touched && fields.length === 0\\\">Please select field type</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"fields.length === 0 && fieldType.hasError('required')\\\">\\r\\n                      Please select field <strong>type</strong>\\r\\n                    </mat-error>\\r\\n\\r\\n\\r\\n                  </mat-form-field>\\r\\n\\r\\n                  <button color=\\\"primary\\\" mat-icon-button [disabled]=\\\"addFieldsFrom.invalid\\\" (click)=\\\"addField(addFieldsFrom)\\\">\\r\\n                    <mat-icon style=\\\"font-size: 35px; margin-top: 22px;\\\">add_circle</mat-icon>\\r\\n                  </button>\\r\\n\\r\\n                </div>\\r\\n                <mat-nav-list>\\r\\n                  <div *ngIf=\\\"fields.length > 0\\\" class=\\\"listHeader\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"55px\\\" fxLayoutAlign=\\\"start space-around \\\">\\r\\n                    <span>Field Title</span>\\r\\n                    <span>Field Type</span>\\r\\n                  </div>\\r\\n                  <mat-list-item *ngFor=\\\"let field of fields\\\">\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"55px\\\" fxLayoutAlign=\\\"start space-around\\\" style=\\\"margin-top:7px;\\\"\\r\\n                      fxFlex=\\\"1 1 auto\\\">\\r\\n                      <span fxFlex=\\\"65px\\\">{{field.fieldTitle}}</span>\\r\\n                      <span fxFlex=\\\"65px\\\">{{field.fieldType.key}}</span>\\r\\n                      <div style=\\\"position:relative; top: -10px;\\\">\\r\\n                        <button color=\\\"primary\\\" mat-icon-button (click)=\\\"removeField(field)\\\">\\r\\n                          <mat-icon>delete</mat-icon>\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </mat-list-item>\\r\\n                </mat-nav-list>\\r\\n\\r\\n              </mat-card-content>\\r\\n              \\r\\n              <mat-card-actions style=\\\"text-align: right; padding: 10px;\\\">\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"primary\\\" (click)=\\\"cancelField()\\\">Cancel</button>\\r\\n                <button mat-raised-button class=\\\"mat-subheading-1 center-align\\\" color=\\\"accent\\\" [disabled]=\\\"addFieldsFrom.invalid && fields.length == 0\\\"\\r\\n                  type=\\\"submit\\\">Update</button>\\r\\n              </mat-card-actions>\\r\\n            </mat-card>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div> -->\\r\\n    <!--End Manual Record Selection Page-->\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observation } from 'src/app/models/observation.model';\r\nimport { MatChipInputEvent, MatSnackBar } from '@angular/material';\r\nimport { Tags } from 'src/app/models/tags.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ObservationService } from 'src/app/services/observation.service';\r\n\r\n@Component({\r\n  selector: 'app-update-observation',\r\n  templateUrl: './update-observation.component.html',\r\n  styleUrls: ['./update-observation.component.css']\r\n})\r\nexport class UpdateObservationComponent implements OnInit {\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  title: any;\r\n  description: any;\r\n  tagVal: any;\r\n\r\n  @ViewChild('updateObservationForm') updateObservationForm: NgForm;\r\n\r\n  observationDetails: Observation;\r\n  tags = [];\r\n  fields = [];\r\n  fieldsType = new Map([\r\n    ['File', 1],\r\n    ['Number', 2],\r\n    ['Text', 3]\r\n  ]);\r\n\r\n  constructor(private route: ActivatedRoute, private observationService: ObservationService, \r\n    public snackBar: MatSnackBar, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.observationDetails = new Observation();\r\n    this.observationDetails = this.route.snapshot.data.data.observations[0];\r\n    this.title = this.observationDetails.title;\r\n    this.description = this.observationDetails.description;\r\n\r\n    // this.title.nativeElement.value = this.observationDetails.title;\r\n\r\n    for(let val of this.observationDetails.fields){\r\n      \r\n      let valType = '';\r\n      switch(val['type']){\r\n        case 1:\r\n          valType = 'File';\r\n          break;\r\n        case 2:\r\n          valType = 'Number';\r\n          break;\r\n        case 3:\r\n          valType = 'Text';\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      let data = {'fieldTitle': val['title'], 'fieldType': {'key': valType, 'value': val['type']}};\r\n      this.fields.push(data)\r\n    }\r\n\r\n    this.tags = this.observationDetails.tags ? this.observationDetails.tags : [];\r\n\r\n    console.log(this.tags);\r\n    \r\n  };\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    if ((value || '').trim()) {\r\n      this.tags.push({ tag: value.trim() });\r\n    }\r\n\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n  };\r\n\r\n  remove(tag: Tags): void {\r\n    const index = this.tags.indexOf(tag);\r\n\r\n    if (index >= 0) {\r\n      this.tags.splice(index, 1);\r\n    }\r\n  };\r\n\r\n  addField(fieldForm: NgForm) {\r\n    this.fields.push(fieldForm.value);\r\n    fieldForm.reset();\r\n    console.log(this.fields);\r\n  };\r\n\r\n  removeField(field) {\r\n    let index = this.fields.indexOf(field);\r\n    this.fields.splice(index, 1);\r\n  };\r\n\r\n  addTag(){\r\n    this.tags.push(this.tagVal);\r\n    this.tagVal = '';\r\n   \r\n  };\r\n\r\n  removeTag(tag){\r\n    let index = this.tags.indexOf(tag);\r\n    this.tags.splice(index, 1);\r\n  };\r\n\r\n  onUpdateObservation(val1){\r\n    let data = {\r\n      'observationId': this.observationDetails.observationId,\r\n      'title': val1.title,\r\n      'description': val1.description,\r\n      'tags': this.tags\r\n    }\r\n\r\n    console.log(data);\r\n    this.observationService.updateObservation(data)\r\n    .subscribe(res =>{\r\n      this.snackBarMessage('Observation Updated Successfully', 'Success');\r\n      this.router.navigateByUrl('/citizenpanel/list');\r\n\r\n    },\r\n    (error) => {\r\n      this.snackBarMessage('Observation can\\'t be updated', 'Failed');\r\n    })\r\n\r\n  };\r\n\r\n  snackBarMessage(message, action) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 5500\r\n    });\r\n  }\r\n\r\n}\r\n","import { Resolve, ActivatedRoute, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Observation } from \"../models/observation.model\";\r\nimport { ObservationService } from \"../services/observation.service\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class RecordResolver implements Resolve<any>{\r\n\r\n    observationId: string;\r\n\r\n    constructor(private observationService: ObservationService) {\r\n        \r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        this.observationId = route.paramMap.get('id');\r\n        return this.observationService.getObservationById(this.observationId)\r\n            .pipe(\r\n                catchError(() => of('data available at this time'))\r\n            );\r\n    }\r\n}","import { DataSource } from \"@angular/cdk/table\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { CollectionViewer } from \"@angular/cdk/collections\";\r\n\r\nexport class BaseDataSource implements DataSource<any> {\r\n\r\n    entitySubject = new BehaviorSubject([]);\r\n    hasItems: boolean = false; // Need to show message: 'No records found'\r\n\r\n    // Loading | Progress Bar\r\n    loadingSubject = new BehaviorSubject(false);\r\n    loading$: Observable<boolean>;\r\n\r\n    // Paginator | Paginators count\r\n    paginatorTotalSubject = new BehaviorSubject(0);\r\n    paginatorTotal$: Observable<Number>;\r\n\r\n    constructor() {\r\n        this.loading$ = this.loadingSubject.asObservable();\r\n        this.paginatorTotal$ = this.paginatorTotalSubject.asObservable();\r\n        this.paginatorTotal$.subscribe(res => this.hasItems = res > 0);\r\n    }\r\n\r\n    connect(collectionViewer: CollectionViewer): Observable<any[]> {\r\n        // Connecting data source\r\n        return this.entitySubject.asObservable();\r\n    }\r\n\r\n    disconnect(collectionViewer: CollectionViewer): void {\r\n        // Disonnecting data source\r\n        this.entitySubject.complete();\r\n        this.loadingSubject.complete();\r\n        this.paginatorTotalSubject.complete();\r\n    }\r\n\r\n}","import { AuthServices } from '../services/auth-services.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (localStorage.getItem('currentUser')) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/signin'], { queryParams: { returnUrl: state.url } });\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { User } from '../models/user.model';\r\nimport { BadInputError } from '../shared/AppErrorHandlers/bad-input-error';\r\nimport { AppError } from '../shared/AppErrorHandlers/app-error';\r\nimport { RouterStateSnapshot, ActivatedRouteSnapshot, Router } from '@angular/router';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable()\r\nexport class AuthServices {\r\n\r\n  url = \"http://18.206.98.162:9000/v1/account\";\r\n  isLoggedIn = false;\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n  \r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(credentials) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    console.log(credentials);\r\n    // let requestOptions = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.post(`${this.url}/signin`, JSON.stringify(credentials), httpOptions)\r\n      .pipe(\r\n        map(user => {\r\n          console.log(user);\r\n          // login successful if there's a jwt token in the response\r\n          if (user && user['token']) {\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n          }\r\n\r\n          this.isLoggedIn = true;\r\n\r\n          return user;\r\n        }));\r\n  }\r\n\r\n  register(credentials) {\r\n    // let headers = new Headers();\r\n    // headers.append('Content-Type', 'application/json');\r\n    // let requestOptions = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.post<User>(`${this.url}/signup`, JSON.stringify(credentials), httpOptions)\r\n      // .pipe(\r\n      //   catchError((err: Response) => {\r\n      //     return Observable.throw(err);\r\n      //   })\r\n      // );\r\n  }\r\n\r\n  logout() {\r\n     // remove user from local storage to log user out\r\n     localStorage.removeItem('currentUser');\r\n     this.router.navigate(['/signin']);\r\n  }\r\n\r\n  // responseErrorHandler(err: Response): Observable<any> {\r\n  //   if (err.status === 400) {\r\n  //     return Observable.throw(new BadInputError())\r\n  //   }\r\n  //   return Observable.throw(new AppError(err))\r\n  // }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { InterceptorSkipHeader } from '../helpers/token.interceptor';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders().set(InterceptorSkipHeader, '')\r\n};\r\n\r\nconst API_URL = \"http://18.206.98.162:9000/v1\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GoogleAppServiceService {\r\n\r\n  data: any = null;\r\n  dataSubject = new BehaviorSubject([]);\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  load(observationId, spreadsheetId) {\r\n    // if (this.data) {\r\n    //   // already loaded data\r\n    //   return Promise.resolve(this.data);\r\n    // }\r\n\r\n\r\n\r\n    // var url = 'https://spreadsheets.google.com/feeds/list/' + id + '/od6/public/values?alt=json';\r\n\r\n    // return this.http.get(url, httpOptions)\r\n    //   .pipe(\r\n    //     map(data => {\r\n    //       this.data = data['feed'].entry;\r\n\r\n    //       let returnArray: Array<any> = [];\r\n\r\n    //       if (this.data && this.data.length > 0) {\r\n    //         this.data.forEach((entry, index) => {\r\n    //           var obj = {};\r\n    //           for (let x in entry) {\r\n    //             if (x.includes('gsx$') && entry[x].$t) {\r\n    //               obj[x.split('$')[1]] = entry[x]['$t'];\r\n    //               // console.log( x.split('$')[1] + ': ' + entry[x]['$t'] );\r\n    //             }\r\n    //           }\r\n\r\n    //           returnArray.push(obj);\r\n    //         })\r\n    //       }\r\n    //       return returnArray\r\n    //     })\r\n    //   )\r\n\r\n    return this.http.post(`${API_URL}/google-sheet/import`, {\r\n      params: new HttpParams()\r\n      .set('observationId', observationId)\r\n      .set('spreadSheetId', spreadsheetId)\r\n    })\r\n  };\r\n\r\n  importSreadsheet(data){\r\n    console.log(data);\r\n    return this.http.post(`${API_URL}/google-sheet/import`, JSON.stringify(data));\r\n  };\r\n}\r\n","import { DataSource, CollectionViewer } from \"@angular/cdk/collections\";\r\nimport { Observation } from \"../models/observation.model\";\r\nimport { BehaviorSubject, of, Observable } from \"rxjs\";\r\nimport { ObservationService } from \"./observation.service\";\r\nimport { catchError, finalize, tap, map } from \"rxjs/operators\";\r\nimport { BaseDataSource } from \"./_base.datasource\";\r\n\r\n\r\n\r\n\r\nexport class ObservationDataSource extends BaseDataSource {\r\n    constructor(private observationService: ObservationService) {\r\n        super();\r\n    }\r\n\r\n    loadObservations(searchText: string, accountId: string, pageNumber: number, pageSize: number, sortOrder: string) {\r\n        this.loadingSubject.next(true);\r\n        this.observationService.getObservations(searchText, accountId, pageNumber, pageSize, sortOrder).pipe(\r\n            tap(res => {\r\n                this.entitySubject.next(res['observations']);\r\n                this.paginatorTotalSubject.next(res['totalCount']);\r\n            }),\r\n            catchError(err => of([])),\r\n            finalize(() => this.loadingSubject.next(false))\r\n        ).subscribe();\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst API_URL = \"http://18.206.98.162:9000/v1\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ObservationService {\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  addObservation(observations) {\r\n    return this.http.post(`${API_URL}/observation`, JSON.stringify(observations));\r\n  }\r\n\r\n  getObservations(searchText: string,accountId: string, pageNumber: number, pageSize: number, sortOrder = 'asc') {\r\n    return this.http.get(`${API_URL}/observation`, {\r\n      params: new HttpParams()\r\n        .set('searchText', searchText)\r\n        .set('accountId', accountId)\r\n        .set('page', pageNumber.toString())\r\n        .set('limit', pageSize.toString())\r\n        .set('sortOrder', sortOrder)\r\n    });\r\n  }\r\n\r\n  getObservationById(observationId: string){\r\n    return this.http.get(`${API_URL}/observation`, {\r\n      params: new HttpParams().set('observationId', observationId)\r\n    });\r\n  }\r\n\r\n  updateObservation(data){\r\n    return this.http.put(`${API_URL}/observation`, JSON.stringify(data));\r\n  }\r\n\r\n}\r\n","import { BaseDataSource } from \"./_base.datasource\";\r\nimport { RecordService } from \"./record.service\";\r\nimport { tap, catchError, finalize, map } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\nimport { Record } from \"../models/record.model\";\r\n\r\n\r\n\r\n\r\nexport class RecordDataSource extends BaseDataSource {\r\n    \r\n    records = [];\r\n    constructor(private recordService: RecordService) {\r\n        super();\r\n    }\r\n\r\n    loadRecords(observationId: string, pageNumber, pageSize, searchText) {\r\n        this.loadingSubject.next(true);\r\n        this.recordService.getRecord(observationId, pageNumber, pageSize, searchText).pipe(\r\n            tap(res => {\r\n                \r\n                \r\n                console.log('In tap');\r\n                console.log(res);\r\n                for(let index in res['records']){\r\n                    // console.log(key);\r\n                    // console.log(res['records'][0]['data'][key]);\r\n                    // let data = { 'fieldName': key, 'fieldValue': res['records'][0]['data'][key]}\r\n                    // this.records.push(data);\r\n                    for(let key in res['records'][index]['data']){\r\n                        let data = { 'fieldName': key, 'fieldValue': res['records'][index]['data'][key]};\r\n                        this.records.push(data);\r\n                    }\r\n                }\r\n\r\n                console.log(this.records);\r\n                this.entitySubject.next(this.records);\r\n                this.paginatorTotalSubject.next(this.records.length);\r\n            }),\r\n            catchError(err => of([])),\r\n            finalize(() => {\r\n                this.loadingSubject.next(false)\r\n                this.records = [];\r\n            })\r\n        )\r\n        .subscribe()\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nconst API_URL = \"http://18.206.98.162:9000/v1\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecordService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addRecord(data){\r\n    return this.http.post(`${API_URL}/record`, data);\r\n  };\r\n\r\n  getRecord(observationId: string, pageNumber, pageSize, searchText){\r\n    return this.http.get(`${API_URL}/record`, {\r\n      params: new HttpParams()\r\n      .set('observationId', observationId)\r\n      .set('searchText', searchText)\r\n      .set('page', pageNumber.toString())\r\n      .set('limit', pageSize.toString())\r\n    });\r\n  };\r\n}\r\n","import {ErrorStateMatcher} from '@angular/material/core';\r\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\n\r\nexport class CustomErrorStateMatcher implements ErrorStateMatcher{\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n        const isSubmitted = form && form.submitted;\r\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n    }\r\n\r\n}","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n    static MatchPassword(control: AbstractControl) {\r\n\r\n        let password = control.get('password') ? control.get('password').value : null ;\r\n\r\n        let confirmPassword = control.get('confirmPassword')? control.get('confirmPassword').value : null;\r\n\r\n        if (password && confirmPassword && password !== confirmPassword) {\r\n            control.get('confirmPassword').setErrors({ ConfirmPassword: true });\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}","module.exports = \".container {\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    align-items: stretch;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.childContainer {\\r\\n    display: flex;\\r\\n    height: 100%;\\r\\n    align-items: stretch;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.upperContainer {\\r\\n    background-color: #3f51b5;\\r\\n    flex: 1 1 auto;\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 5px -1px, rgba(0, 0, 0, 0.14) 0px 6px 10px 0px, rgba(0, 0, 0, 0.12) 0px 1px 18px 0px;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.customPosition{\\r\\n    position: absolute;\\r\\n    height: 55%;\\r\\n    margin-top: 12%;\\r\\n    width: 25%;\\r\\n}\\r\\n\\r\\n.mat-card {\\r\\n    border-radius: 0;\\r\\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 5px -1px, rgba(0, 0, 0, 0.14) 0px 6px 10px 0px, rgba(0, 0, 0, 0.12) 0px 1px 18px 0px;\\r\\n}\\r\\n\\r\\n.title-header {\\r\\n    box-sizing: border-box;\\r\\n    background-color: #27b727;\\r\\n    height: 15%;\\r\\n    padding: 19px;\\r\\n    font-size: large;\\r\\n    border-top-left-radius: 5px;\\r\\n    border-top-right-radius: 5px;\\r\\n}\\r\\n\\r\\n.title-header .material-icons {\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\n.signIn-form {\\r\\n    box-sizing: border-box;\\r\\n    padding: 15px 25px 0px 25px;\\r\\n    font-size: medium;\\r\\n    margin-top: 12px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsY0FBYztJQUNkLHFCQUFxQjtJQUNyQix1QkFBdUI7Q0FDMUI7O0FBRUQ7SUFDSSxjQUFjO0lBQ2QsYUFBYTtJQUNiLHFCQUFxQjtJQUNyQix1QkFBdUI7Q0FDMUI7O0FBRUQ7SUFDSSwwQkFBMEI7SUFDMUIsZUFBZTtJQUNmLGNBQWM7SUFDZCxZQUFZO0lBQ1osNEhBQTRIO0lBQzVILHdCQUF3QjtJQUN4QixvQkFBb0I7Q0FDdkI7O0FBRUQ7SUFDSSxtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixXQUFXO0NBQ2Q7O0FBQ0Q7SUFDSSxpQkFBaUI7SUFDakIsNEhBQTRIO0NBQy9IOztBQUVEO0lBQ0ksdUJBQXVCO0lBQ3ZCLDBCQUEwQjtJQUMxQixZQUFZO0lBQ1osY0FBYztJQUNkLGlCQUFpQjtJQUNqQiw0QkFBNEI7SUFDNUIsNkJBQTZCO0NBQ2hDOztBQUVEO0lBQ0ksZ0JBQWdCO0NBQ25COztBQUVEO0lBQ0ksdUJBQXVCO0lBQ3ZCLDRCQUE0QjtJQUM1QixrQkFBa0I7SUFDbEIsaUJBQWlCO0NBQ3BCIiwiZmlsZSI6InNyYy9hcHAvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5jaGlsZENvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4udXBwZXJDb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNmNTFiNTtcclxuICAgIGZsZXg6IDEgMSBhdXRvO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjIpIDBweCAzcHggNXB4IC0xcHgsIHJnYmEoMCwgMCwgMCwgMC4xNCkgMHB4IDZweCAxMHB4IDBweCwgcmdiYSgwLCAwLCAwLCAwLjEyKSAwcHggMXB4IDE4cHggMHB4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uY3VzdG9tUG9zaXRpb257XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBoZWlnaHQ6IDU1JTtcclxuICAgIG1hcmdpbi10b3A6IDEyJTtcclxuICAgIHdpZHRoOiAyNSU7XHJcbn1cclxuLm1hdC1jYXJkIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMikgMHB4IDNweCA1cHggLTFweCwgcmdiYSgwLCAwLCAwLCAwLjE0KSAwcHggNnB4IDEwcHggMHB4LCByZ2JhKDAsIDAsIDAsIDAuMTIpIDBweCAxcHggMThweCAwcHg7XHJcbn1cclxuXHJcbi50aXRsZS1oZWFkZXIge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyN2I3Mjc7XHJcbiAgICBoZWlnaHQ6IDE1JTtcclxuICAgIHBhZGRpbmc6IDE5cHg7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNXB4O1xyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLnRpdGxlLWhlYWRlciAubWF0ZXJpYWwtaWNvbnMge1xyXG4gICAgZm9udC1zaXplOiAzMHB4O1xyXG59XHJcblxyXG4uc2lnbkluLWZvcm0ge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIHBhZGRpbmc6IDE1cHggMjVweCAwcHggMjVweDtcclxuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xyXG4gICAgbWFyZ2luLXRvcDogMTJweDtcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"childContainer\\\" *ngIf=\\\"!userLoggedIn && !userLogPage\\\">\\r\\n    <div class=\\\"upperContainer\\\">\\r\\n      <div class=\\\"customPosition\\\">\\r\\n        <mat-card style=\\\"max-height: 100%; height:100%; border-radius: 5px; z-index:1; padding: 0;\\\">\\r\\n          <div class=\\\"title-header\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"12px\\\" style=\\\"background-color:#27b727; color: white;\\\">\\r\\n            <span>\\r\\n              <mat-icon aria-label=\\\"Login\\\">account_box</mat-icon>\\r\\n            </span>\\r\\n            <span style=\\\"box-sizing:border-box; padding-top: 5px;\\\">Sign In</span>\\r\\n          </div>\\r\\n          <mat-card-content>\\r\\n            <form class=\\\"signIn-form\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly none\\\" fxLayoutGap=\\\"12px\\\"\\r\\n              [formGroup]=\\\"signInFrom\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"errorMatcher\\\" />\\r\\n                <mat-hint *ngIf=\\\"!emailControl?.touched\\\">Please enter your email address</mat-hint>\\r\\n                <mat-error *ngIf=\\\"emailControl?.hasError('email') && !emailControl?.hasError('required')\\\">\\r\\n                  Please enter a valid email address\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"emailControl?.hasError('required')\\\">\\r\\n                  Email is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\"/>\\r\\n                <mat-hint *ngIf=\\\"!passwordControl?.touched\\\">Password must be at least 6 characters.</mat-hint>\\r\\n                <mat-error *ngIf=\\\"passwordControl.hasError('required')\\\">\\r\\n                  Password is <strong>required</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"passwordControl.hasError('minlength')\\\">\\r\\n                  Password must be <strong>at least 6 </strong>characters.\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <span></span>\\r\\n              <span></span>\\r\\n              <span></span>\\r\\n              <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" style=\\\"font-size:medium;\\\">Sign In</button>\\r\\n            </form>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"flex: 1 1 auto;\\\">\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CustomErrorStateMatcher } from '../shared/customErrorStateMatcher';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AuthServices } from '../services/auth-services.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n  errorMatcher = new CustomErrorStateMatcher();\r\n  returnUrl: string;\r\n\r\n  signInFrom = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n    deviceType: new FormControl(1)\r\n  });\r\n  constructor(private authServcie: AuthServices, \r\n    public snackBar: MatSnackBar,\r\n    private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    console.log('Sign In Component Initialized');\r\n    // reset login status\r\n    this.authServcie.logout();\r\n \r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  onSubmit(){\r\n    if (this.signInFrom.valid) {\r\n      // this.registerFrom.removeControl('confirmPassword');\r\n      let message : any;\r\n      this.authServcie.login(this.signInFrom.value)\r\n        .pipe(first())\r\n        .subscribe(data => {\r\n          this.snackBarMessage(\"Login Successfull\", \"Success\");\r\n          this.router.navigate(['/citizenpanel']);\r\n          // console.log(data)\r\n        },\r\n        (errorRes => {\r\n          // if (error instanceof BadInputError){\r\n          //   console.log(error);\r\n          // }\r\n          if(errorRes.status === 400)\r\n             message = errorRes.error['error'];\r\n             message = message.split('.').join(' ');\r\n            this.snackBarMessage(message, \"Falied\");\r\n          console.log(errorRes);\r\n        }));\r\n    }\r\n    else {\r\n      this.validateAllFormFields(this.signInFrom);\r\n    }\r\n  }\r\n  get emailControl() {\r\n    let email = this.getControl('email');\r\n    return email;\r\n  }\r\n\r\n  get passwordControl() {\r\n    return this.getControl('password');\r\n  }\r\n\r\n  getControl(controlName: string) {\r\n    return this.signInFrom.get(controlName);\r\n  }\r\n\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  snackBarMessage(message, action){\r\n    this.snackBar.open(message, action, {\r\n      duration: 5500\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n.container {\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    align-items: stretch;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.childContainer {\\r\\n    display: flex;\\r\\n    height: 100%;\\r\\n    align-items: stretch;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.upperContainer {\\r\\n    background-color: #3f51b5;\\r\\n    flex: 1 1 auto;\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 5px -1px, rgba(0, 0, 0, 0.14) 0px 6px 10px 0px, rgba(0, 0, 0, 0.12) 0px 1px 18px 0px;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.customPosition{\\r\\n    position: absolute;\\r\\n    height: 65%;\\r\\n    margin-top: 10%;\\r\\n    width: 25%;\\r\\n}\\r\\n\\r\\n.mat-card {\\r\\n    border-radius: 0;\\r\\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 5px -1px, rgba(0, 0, 0, 0.14) 0px 6px 10px 0px, rgba(0, 0, 0, 0.12) 0px 1px 18px 0px;\\r\\n}\\r\\n\\r\\n.title-header {\\r\\n    box-sizing: border-box;\\r\\n    background-color: gold;\\r\\n    height: 15%;\\r\\n    padding: 19px;\\r\\n    font-size: large;\\r\\n    border-top-left-radius: 5px;\\r\\n    border-top-right-radius: 5px;\\r\\n}\\r\\n\\r\\n.title-header .material-icons {\\r\\n    font-size: 30px;\\r\\n}\\r\\n\\r\\n.register-form {\\r\\n    box-sizing: border-box;\\r\\n    padding: 15px 25px 0px 25px;\\r\\n    font-size: medium;\\r\\n    margin-top: 12px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksYUFBYTtJQUNiLGNBQWM7SUFDZCxxQkFBcUI7SUFDckIsdUJBQXVCO0NBQzFCOztBQUVEO0lBQ0ksY0FBYztJQUNkLGFBQWE7SUFDYixxQkFBcUI7SUFDckIsdUJBQXVCO0NBQzFCOztBQUVEO0lBQ0ksMEJBQTBCO0lBQzFCLGVBQWU7SUFDZixjQUFjO0lBQ2QsWUFBWTtJQUNaLDRIQUE0SDtJQUM1SCx3QkFBd0I7SUFDeEIsb0JBQW9CO0NBQ3ZCOztBQUVEO0lBQ0ksbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsV0FBVztDQUNkOztBQUNEO0lBQ0ksaUJBQWlCO0lBQ2pCLDRIQUE0SDtDQUMvSDs7QUFFRDtJQUNJLHVCQUF1QjtJQUN2Qix1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsNEJBQTRCO0lBQzVCLDZCQUE2QjtDQUNoQzs7QUFFRDtJQUNJLGdCQUFnQjtDQUNuQjs7QUFFRDtJQUNJLHVCQUF1QjtJQUN2Qiw0QkFBNEI7SUFDNUIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtDQUNwQiIsImZpbGUiOiJzcmMvYXBwL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5jb250YWluZXIge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLmNoaWxkQ29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi51cHBlckNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y1MWI1O1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMikgMHB4IDNweCA1cHggLTFweCwgcmdiYSgwLCAwLCAwLCAwLjE0KSAwcHggNnB4IDEwcHggMHB4LCByZ2JhKDAsIDAsIDAsIDAuMTIpIDBweCAxcHggMThweCAwcHg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jdXN0b21Qb3NpdGlvbntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGhlaWdodDogNjUlO1xyXG4gICAgbWFyZ2luLXRvcDogMTAlO1xyXG4gICAgd2lkdGg6IDI1JTtcclxufVxyXG4ubWF0LWNhcmQge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4yKSAwcHggM3B4IDVweCAtMXB4LCByZ2JhKDAsIDAsIDAsIDAuMTQpIDBweCA2cHggMTBweCAwcHgsIHJnYmEoMCwgMCwgMCwgMC4xMikgMHB4IDFweCAxOHB4IDBweDtcclxufVxyXG5cclxuLnRpdGxlLWhlYWRlciB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ29sZDtcclxuICAgIGhlaWdodDogMTUlO1xyXG4gICAgcGFkZGluZzogMTlweDtcclxuICAgIGZvbnQtc2l6ZTogbGFyZ2U7XHJcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA1cHg7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNXB4O1xyXG59XHJcblxyXG4udGl0bGUtaGVhZGVyIC5tYXRlcmlhbC1pY29ucyB7XHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbn1cclxuXHJcbi5yZWdpc3Rlci1mb3JtIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDI1cHggMHB4IDI1cHg7XHJcbiAgICBmb250LXNpemU6IG1lZGl1bTtcclxuICAgIG1hcmdpbi10b3A6IDEycHg7XHJcbn0iXX0= */\"","module.exports = \"<!-- <mat-card style=\\\"max-height: 100%; height:100%; border-radius: 5px; z-index:1; padding: 0;\\\">\\r\\n  <div class=\\\"title-header\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"12px\\\">\\r\\n    <span>\\r\\n      <mat-icon aria-label=\\\"Register\\\">how_to_reg</mat-icon>\\r\\n    </span>\\r\\n    <span style=\\\"box-sizing:border-box; padding-top: 5px;\\\">Register</span>\\r\\n  </div>\\r\\n  <mat-card-content>\\r\\n    <form class=\\\"register-form\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly none\\\" fxLayoutGap=\\\"12px\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Username\\\" required />\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Email\\\" required />\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Passowrd\\\" required />\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <mat-select placeholder=\\\"Register as\\\" name=\\\"usersType\\\" required>\\r\\n          <mat-option *ngFor=\\\"let user of usersType\\\" [value]=\\\"user\\\">\\r\\n            {{user}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <span></span>\\r\\n      <span></span>\\r\\n      <span></span>\\r\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" style=\\\"font-size:medium;\\\">Register</button>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card> -->\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"childContainer\\\" *ngIf=\\\"!userLoggedIn && !userLogPage\\\">\\r\\n    <div class=\\\"upperContainer\\\">\\r\\n      <div class=\\\"customPosition\\\">\\r\\n        <mat-card style=\\\"max-height: 100%; height:100%; border-radius: 5px; z-index:1; padding: 0;\\\">\\r\\n          <div class=\\\"title-header\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"12px\\\">\\r\\n            <span>\\r\\n              <mat-icon aria-label=\\\"Register\\\">how_to_reg</mat-icon>\\r\\n            </span>\\r\\n            <span style=\\\"box-sizing:border-box; padding-top: 5px;\\\">Register</span>\\r\\n          </div>\\r\\n          <mat-card-content>\\r\\n            <form class=\\\"register-form\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly none\\\" fxLayoutGap=\\\"12px\\\"\\r\\n              [formGroup]=\\\"registerFrom\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" />\\r\\n                <mat-hint *ngIf=\\\"!usernameControl?.touched\\\">Please enter your name</mat-hint>\\r\\n                <mat-error *ngIf=\\\"usernameControl?.hasError('required')\\\">\\r\\n                  Name is <strong>required</strong>\\r\\n                </mat-error>\\r\\n\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"errorMatcher\\\"/>\\r\\n                <mat-hint *ngIf=\\\"!emailControl?.touched\\\">Please enter your email address</mat-hint>\\r\\n                <mat-error *ngIf=\\\"emailControl?.hasError('email') && !emailControl?.hasError('required')\\\">\\r\\n                  Please enter a valid email address\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"emailControl?.hasError('required')\\\">\\r\\n                  Email is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" />\\r\\n                <mat-hint *ngIf=\\\"!passwordControl?.touched\\\">Password must be at least 6 characters.</mat-hint>\\r\\n                <mat-error *ngIf=\\\"passwordControl.hasError('required')\\\">\\r\\n                  Password is <strong>required</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"passwordControl.hasError('minlength')\\\">\\r\\n                  Password must be <strong>at least 6 </strong>characters.\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Confirm Passowrd\\\" formControlName=\\\"confirmPassword\\\" />\\r\\n                <mat-hint *ngIf=\\\"!confirmPasswordControl?.touched\\\">Please confirm password.</mat-hint>\\r\\n                <mat-error *ngIf=\\\"confirmPasswordControl?.hasError && confirmPasswordControl?.hasError('ConfirmPassword')\\\">\\r\\n                  Passwords <strong>do not</strong> match\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"confirmPasswordControl?.hasError('required')\\\">\\r\\n                  Confirm Password is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Register as\\\" name=\\\"usersType\\\" required formControlName=\\\"accountType\\\">\\r\\n                  <mat-option *ngFor=\\\"let user of usersType | keyvalue\\\" [value]=\\\"user.value\\\">\\r\\n                    {{user.key}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-hint *ngIf=\\\"!accountTypeControl?.touched\\\">Please select user type</mat-hint>\\r\\n                <mat-error *ngIf=\\\"accountTypeControl?.hasError('required')\\\">\\r\\n                  Please select user <strong>type</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <span></span>\\r\\n              <span></span>\\r\\n              <span></span>\\r\\n              <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" style=\\\"font-size:medium;\\\">Register</button>\\r\\n            </form>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"flex: 1 1 auto;\\\">\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { AuthServices } from '../services/auth-services.service';\r\nimport { User } from '../models/user.model';\r\nimport { CustomErrorStateMatcher } from '../shared/customErrorStateMatcher';\r\nimport { ConfirmPasswordValidator } from '../shared/validators/confirm-password.validator';\r\nimport { first } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { BadInputError } from '../shared/AppErrorHandlers/bad-input-error';\r\nimport { AppError } from '../shared/AppErrorHandlers/app-error';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  usersType = new Map([\r\n    ['Researcher', 1],\r\n    ['User', 2]\r\n  ]);\r\n\r\n  errorMatcher = new CustomErrorStateMatcher();\r\n\r\n  registerFrom = new FormGroup({\r\n    name: new FormControl('', Validators.required),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n    confirmPassword: new FormControl('', Validators.required),\r\n    accountType: new FormControl('', Validators.required),\r\n    deviceType: new FormControl(1)\r\n  }, { validators: ConfirmPasswordValidator.MatchPassword });\r\n\r\n\r\n  constructor(private authServcie: AuthServices, \r\n    public snackBar: MatSnackBar,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    if (this.registerFrom.valid) {\r\n      // this.registerFrom.removeControl('confirmPassword');\r\n      let message : any;\r\n      this.authServcie.register(this.registerFrom.value)\r\n        .pipe(first())\r\n        .subscribe(data => {\r\n          this.snackBarMessage(\"Registration Successfull\", \"Success\");\r\n          this.router.navigate(['/signin']);\r\n        },\r\n        (errorRes => {\r\n          // if (error instanceof BadInputError){\r\n          //   console.log(error);\r\n          // }\r\n          if(errorRes.status === 400)\r\n             message = errorRes.error.error.toString().split();\r\n            this.snackBarMessage(message, \"Falied\");\r\n        }));\r\n    }\r\n    else {\r\n      this.validateAllFormFields(this.registerFrom);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  get usernameControl() {\r\n    let username = this.getControl('name');\r\n    return username;\r\n  }\r\n\r\n  get emailControl() {\r\n    let email = this.getControl('email');\r\n    return email;\r\n  }\r\n\r\n  get passwordControl() {\r\n    return this.getControl('password');\r\n  }\r\n\r\n  get confirmPasswordControl() {\r\n    return this.getControl('confirmPassword');\r\n  }\r\n\r\n  get accountTypeControl() {\r\n    return this.getControl('accountType');\r\n  }\r\n\r\n  getControl(controlName: string) {\r\n    return this.registerFrom.get(controlName);\r\n  }\r\n\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  snackBarMessage(message, action){\r\n    this.snackBar.open(message, action, {\r\n      duration: 5500\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild([\r\n            { path: \"**\", component: NotFoundComponent }\r\n        ])\r\n    ],\r\n    declarations: [NotFoundComponent],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class WildCardRoutingModule{}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}